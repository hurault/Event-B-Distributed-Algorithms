<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.prFile version="1">
    <org.eventb.core.prProof name="INITIALISATION/TmesOf/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="EVENT,MESSAGE">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(COM,{Send},{Receive}))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p6" org.eventb.core.prHyps=""/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∅ ⦂ ℙ(EVENT×MESSAGE))∈(∅ ⦂ ℙ(EVENT)) → MESSAGE"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="¬Send=Receive">
            <org.eventb.core.prIdent name="COM" org.eventb.core.type="ℙ(COM)"/>
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="COM={Send,Receive}">
            <org.eventb.core.prIdent name="COM" org.eventb.core.type="ℙ(COM)"/>
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(c1≠c2∨m1≠m2⇔eventmapper(c1 ↦ m1)≠eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="COM" org.eventb.core.type="ℙ(COM)"/>
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="COM" org.eventb.core.type="ℙ(COM)"/>
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(COM,{Send},{Receive})">
            <org.eventb.core.prIdent name="COM" org.eventb.core.type="ℙ(COM)"/>
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="send/TmesOf/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29" org.eventb.core.prSets="COM,EVENT,MESSAGE,PEER">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(COM,{Send},{Receive}))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30,p31"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p30,p31"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p34"/>
                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p35"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p31,p3,p4,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p30,p20,p21,p23,p24,p25,p26,p27,p37,p28,p29,p33">
                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
        <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        <org.eventb.core.prIdent name="links" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
        <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="e∈EVENT ∖ past"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT,c⦂EVENT·e1 ↦ c∈links∧e2 ↦ c∈links⇒e1=e2"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬Send=Receive"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="run∈past  past"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒e1 ↦ e2∈prec∨e2 ↦ e1∈prec"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="partition(COM,{Send},{Receive})"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧peerOf(e1)≠peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="prec∈past  past"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="run;run⊆run"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="prec∩prec∼⊆(id ⦂ ℙ(EVENT×EVENT))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="eventmapper∈COM × MESSAGE ⤖ EVENT"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀e⦂EVENT·e∈past∧comOf(e)=Receive⇒(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(e)=mesOf(es)∧es ↦ e∈prec)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="run∩run∼⊆(id ⦂ ℙ(EVENT×EVENT))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧comOf(e1)=comOf(e2)∧mesOf(e1)=mesOf(e2)⇒e1=e2"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="prec⊆run"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆prec"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆run"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="m∈MESSAGE ∖ ran(mesOf)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀e⦂EVENT,c1⦂EVENT,c2⦂EVENT·e ↦ c1∈links∧e ↦ c2∈links⇒c1=c2"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="links∈past ↔ past"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="COM={Send,Receive}"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="peerOf∈past → PEER"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒(e1 ↦ e2∈prec⇔e1 ↦ e2∈run)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(c1≠c2∨m1≠m2⇔eventmapper(c1 ↦ m1)≠eventmapper(c2 ↦ m2))"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past⇒e1 ↦ e2∈run∨e2 ↦ e1∈run"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="p∈PEER">
            <org.eventb.core.prIdent name="p" org.eventb.core.type="PEER"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="comOf∈past → COM"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="dom(links)∩ran(links)=(∅ ⦂ ℙ(EVENT))"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="prec;prec⊆prec"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="links⊆prec"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2)"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀es⦂EVENT,er⦂EVENT·es ↦ er∈links⇒comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er)"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="mesOf∈past → MESSAGE"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧¬peerOf(e1)=peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2))"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·⊤∧⊤∧⊤∧⊤⇒(¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2))"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="past∈ℙ(EVENT)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="mesOf∪{e ↦ m}∈past∪{e} → MESSAGE"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="receive/TmesOf/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5" org.eventb.core.prSets="COM,EVENT,MESSAGE">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(COM,{Send},{Receive}))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p6,p7"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p6,p7"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p12"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p13"/>
                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p14"/>
                                <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p15"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p17"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p6,p4,p1,p12,p2,p7">
                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R500"/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
        <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="e∈EVENT ∖ past"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬Send=Receive"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="COM={Send,Receive}"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(c1≠c2∨m1≠m2⇔eventmapper(c1 ↦ m1)≠eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="partition(COM,{Send},{Receive})"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀ep⦂EVENT·ep∈past∧comOf(ep)=Receive⇒¬mesOf(ep)=m"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="p∈PEER">
            <org.eventb.core.prIdent name="PEER" org.eventb.core.type="ℙ(PEER)"/>
            <org.eventb.core.prIdent name="p" org.eventb.core.type="PEER"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧peerOf(e1)≠peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))">
            <org.eventb.core.prIdent name="PEER" org.eventb.core.type="ℙ(PEER)"/>
            <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2)">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="mesOf∈past → MESSAGE"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧¬peerOf(e1)=peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))">
            <org.eventb.core.prIdent name="PEER" org.eventb.core.type="ℙ(PEER)"/>
            <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀ep⦂EVENT·ep∈past∧comOf(ep)=Receive⇒mesOf(ep)≠m"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·⊤∧⊤∧⊤∧⊤⇒(¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="m∈MESSAGE"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="past∈ℙ(EVENT)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="mesOf∪{e ↦ m}∈past∪{e} → MESSAGE"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalPP:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/TcomOf/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="COM,EVENT">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(COM,{Send},{Receive}))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p6" org.eventb.core.prHyps=""/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∅ ⦂ ℙ(EVENT×COM))∈(∅ ⦂ ℙ(EVENT)) → COM"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="¬Send=Receive">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="COM={Send,Receive}">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(c1≠c2∨m1≠m2⇔eventmapper(c1 ↦ m1)≠eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(COM,{Send},{Receive})">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="send/TcomOf/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29" org.eventb.core.prSets="COM,EVENT,MESSAGE,PEER">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(COM,{Send},{Receive}))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30,p31"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p30,p31"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p34"/>
                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p35"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p31,p3,p4,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p30,p20,p21,p23,p24,p25,p26,p27,p37,p28,p29,p33">
                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
        <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        <org.eventb.core.prIdent name="links" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
        <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="e∈EVENT ∖ past"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT,c⦂EVENT·e1 ↦ c∈links∧e2 ↦ c∈links⇒e1=e2"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬Send=Receive"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="run∈past  past"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒e1 ↦ e2∈prec∨e2 ↦ e1∈prec"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="partition(COM,{Send},{Receive})"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧peerOf(e1)≠peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="prec∈past  past"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="run;run⊆run"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="prec∩prec∼⊆(id ⦂ ℙ(EVENT×EVENT))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="comOf∪{e ↦ Send}∈past∪{e} → COM"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="eventmapper∈COM × MESSAGE ⤖ EVENT"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀e⦂EVENT·e∈past∧comOf(e)=Receive⇒(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(e)=mesOf(es)∧es ↦ e∈prec)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="run∩run∼⊆(id ⦂ ℙ(EVENT×EVENT))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧comOf(e1)=comOf(e2)∧mesOf(e1)=mesOf(e2)⇒e1=e2"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="prec⊆run"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆prec"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆run"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="m∈MESSAGE ∖ ran(mesOf)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀e⦂EVENT,c1⦂EVENT,c2⦂EVENT·e ↦ c1∈links∧e ↦ c2∈links⇒c1=c2"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="links∈past ↔ past"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="COM={Send,Receive}"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="peerOf∈past → PEER"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒(e1 ↦ e2∈prec⇔e1 ↦ e2∈run)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(c1≠c2∨m1≠m2⇔eventmapper(c1 ↦ m1)≠eventmapper(c2 ↦ m2))"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past⇒e1 ↦ e2∈run∨e2 ↦ e1∈run"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="p∈PEER">
            <org.eventb.core.prIdent name="p" org.eventb.core.type="PEER"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="comOf∈past → COM"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="dom(links)∩ran(links)=(∅ ⦂ ℙ(EVENT))"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="prec;prec⊆prec"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="links⊆prec"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2)"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀es⦂EVENT,er⦂EVENT·es ↦ er∈links⇒comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er)"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="mesOf∈past → MESSAGE"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧¬peerOf(e1)=peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2))"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·⊤∧⊤∧⊤∧⊤⇒(¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2))"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="past∈ℙ(EVENT)"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="receive/TcomOf/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5" org.eventb.core.prSets="COM,EVENT,MESSAGE">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(COM,{Send},{Receive}))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p6,p7"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p6,p7"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p12"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p13"/>
                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p14"/>
                                <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p15"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p17"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p6,p3,p1,p12,p5,p7">
                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R500"/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
        <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="e∈EVENT ∖ past"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬Send=Receive"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="COM={Send,Receive}"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(c1≠c2∨m1≠m2⇔eventmapper(c1 ↦ m1)≠eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(COM,{Send},{Receive})"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀ep⦂EVENT·ep∈past∧comOf(ep)=Receive⇒¬mesOf(ep)=m"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="p∈PEER">
            <org.eventb.core.prIdent name="PEER" org.eventb.core.type="ℙ(PEER)"/>
            <org.eventb.core.prIdent name="p" org.eventb.core.type="PEER"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="comOf∈past → COM"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧peerOf(e1)≠peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))">
            <org.eventb.core.prIdent name="PEER" org.eventb.core.type="ℙ(PEER)"/>
            <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2)">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="comOf∪{e ↦ Receive}∈past∪{e} → COM"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧¬peerOf(e1)=peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))">
            <org.eventb.core.prIdent name="PEER" org.eventb.core.type="ℙ(PEER)"/>
            <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀ep⦂EVENT·ep∈past∧comOf(ep)=Receive⇒mesOf(ep)≠m"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·⊤∧⊤∧⊤∧⊤⇒(¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="m∈MESSAGE"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="past∈ℙ(EVENT)"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalPP:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="receive/grd6/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29" org.eventb.core.prSets="COM,EVENT,MESSAGE,PEER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p3,p28,p16,p8,p17,p4,p25,p12,p15,p23,p9,p24,p5,p2,p21,p13,p27,p14,p29,p18,p22,p19,p6,p26,p10,p7"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC4" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p20,p11,p3,p28,p16,p8,p17,p4,p25,p12,p15,p23,p9,p24,p5,p2,p21,p13,p27,p14,p29,p18,p22,p19,p6,p26,p10,p7">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC4"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
        <org.eventb.core.prIdent name="links" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prIdent name="p" org.eventb.core.type="PEER"/>
        <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
        <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="e∈EVENT ∖ past"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="run∈past  past"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(COM,{Send},{Receive})"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀e⦂EVENT·e∈past⇒e ↦ e∈prec"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒e1 ↦ e2∈prec∨e2 ↦ e1∈prec"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="dom(mesOf)=comOf∼[{Send,Receive}]"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧peerOf(e1)≠peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="prec∈past  past"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="prec∩prec∼⊆(id ⦂ ℙ(EVENT×EVENT)) ▷ past"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀e⦂EVENT·e∈past∧comOf(e)=Receive⇒(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(e)=mesOf(es)∧es ↦ e∈prec)"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="m∈MESSAGE"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧e2 ↦ e1∈prec⇒e1=e2"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT,e3⦂EVENT·e1 ↦ e2∈run∧e2 ↦ e3∈run⇒e1 ↦ e3∈run"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="prec⊆run"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆prec"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="links∈past ↔ past"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="peerOf∈past → PEER"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒(e1 ↦ e2∈prec⇔e1 ↦ e2∈run)"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="mesOf∈past ⇸ MESSAGE"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="p∈PEER"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past⇒e1 ↦ e2∈run∨e2 ↦ e1∈run"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="comOf∈past → COM"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="prec;prec⊆prec"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="links⊆prec"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀ep⦂EVENT·(ep∈past⇒ep∈dom(comOf)∧comOf∈EVENT ⇸ COM)∧(ep∈past∧comOf(ep)=Receive⇒ep∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE)"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT,e3⦂EVENT·e1 ↦ e2∈prec∧e2 ↦ e3∈prec⇒e1 ↦ e3∈prec"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧{comOf(e1),comOf(e2)}⊆{Send,Receive}∧comOf(e1)=comOf(e2)∧mesOf(e1)=mesOf(e2)⇒e1=e2"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈run∧e2 ↦ e1∈run⇒e1=e2"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="past∈ℙ(EVENT)"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec⇒e1 ↦ e2∈run"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="receive/grd2/GRD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="COM,EVENT,MESSAGE">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(COM,{Send},{Receive}))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p3,p4"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p3,p4"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p0">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14"/>
                                <org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p7"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊥ hyp" org.eventb.core.prHyps="p14"/>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="cause" org.eventb.core.type="EVENT"/>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="⊥"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬Send=Receive">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="⊥∧comOf(cause)=Send∧mesOf(cause)=m"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="COM={Send,Receive}">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(c1≠c2∨m1≠m2⇔eventmapper(c1 ↦ m1)≠eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(COM,{Send},{Receive})">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀ep⦂EVENT·ep∈past∧comOf(ep)=Receive⇒¬mesOf(ep)=m">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="cause∈past∧comOf(cause)=Send∧mesOf(cause)=m"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧peerOf(e1)≠peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))">
            <org.eventb.core.prIdent name="PEER" org.eventb.core.type="ℙ(PEER)"/>
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧¬peerOf(e1)=peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))">
            <org.eventb.core.prIdent name="PEER" org.eventb.core.type="ℙ(PEER)"/>
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="cause∈past⇒cause∈dom(comOf)∧comOf∈EVENT ⇸ COM∧(comOf(cause)=Send⇒cause∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀ep⦂EVENT·ep∈past∧comOf(ep)=Receive⇒mesOf(ep)≠m">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="⊥⇒cause∈dom(comOf)∧comOf∈EVENT ⇸ COM∧(comOf(cause)=Send⇒cause∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="cause∈past"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL4"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.falseHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="receive/act2/SIM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36" org.eventb.core.prSets="COM,EVENT,MESSAGE,PEER">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p2,p3,p4,p5,p6,p7,p8,p9,p11,p12,p13,p14,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p27,p28,p29,p31,p32,p33,p34,p36"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="cause" org.eventb.core.type="EVENT"/>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
        <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        <org.eventb.core.prIdent name="links" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prIdent name="p" org.eventb.core.type="PEER"/>
        <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
        <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="e∈EVENT ∖ past"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀es⦂EVENT·es∈past⇒es∈dom(comOf)∧comOf∈EVENT ⇸ COM∧(comOf(es)=Send⇒es∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT,c⦂EVENT·e1 ↦ c∈links∧e2 ↦ c∈links⇒e1=e2"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="run∈past  past"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="partition(COM,{Send},{Receive})"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒e1 ↦ e2∈prec∨e2 ↦ e1∈prec"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧peerOf(e1)≠peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="prec∈past  past"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="links∪{es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m ∣ es ↦ e}=links∪{cause ↦ e}"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="run;run⊆run"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀ep⦂EVENT·ep∈past∧comOf(ep)=Receive⇒mesOf(ep)≠m"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="prec∩prec∼⊆(id ⦂ ℙ(EVENT×EVENT))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="cause∈past⇒cause∈dom(comOf)∧comOf∈EVENT ⇸ COM∧(comOf(cause)=Send⇒cause∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE)"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="eventmapper∈COM × MESSAGE ⤖ EVENT"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀e⦂EVENT·e∈past∧comOf(e)=Receive⇒(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(e)=mesOf(es)∧es ↦ e∈prec)"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="m∈MESSAGE"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="run∩run∼⊆(id ⦂ ℙ(EVENT×EVENT))"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧comOf(e1)=comOf(e2)∧mesOf(e1)=mesOf(e2)⇒e1=e2"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="prec⊆run"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆prec"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆run"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀e⦂EVENT,c1⦂EVENT,c2⦂EVENT·e ↦ c1∈links∧e ↦ c2∈links⇒c1=c2"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="links∈past ↔ past"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(c1≠c2∨m1≠m2⇔eventmapper(c1 ↦ m1)≠eventmapper(c2 ↦ m2))"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="peerOf∈past → PEER"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒(e1 ↦ e2∈prec⇔e1 ↦ e2∈run)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="p∈PEER"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past⇒e1 ↦ e2∈run∨e2 ↦ e1∈run"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="comOf∈past → COM"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="dom(links)∩ran(links)=(∅ ⦂ ℙ(EVENT))"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="cause∈past∧comOf(cause)=Send∧mesOf(cause)=m"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="prec;prec⊆prec"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="links⊆prec"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀es⦂EVENT,er⦂EVENT·es ↦ er∈links⇒comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er)"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="mesOf∈past → MESSAGE"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="past∈ℙ(EVENT)"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="receive/act4/SIM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38" org.eventb.core.prSets="COM,EVENT,MESSAGE,PEER">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p2,p3,p4,p5,p6,p7,p8,p9,p11,p12,p13,p14,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p28,p29,p30,p32,p33,p34,p35,p36,p38"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="cause" org.eventb.core.type="EVENT"/>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
        <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        <org.eventb.core.prIdent name="links" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prIdent name="p" org.eventb.core.type="PEER"/>
        <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
        <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="e∈EVENT ∖ past"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀es⦂EVENT·es∈past⇒es∈dom(comOf)∧comOf∈EVENT ⇸ COM∧(comOf(es)=Send⇒es∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT,c⦂EVENT·e1 ↦ c∈links∧e2 ↦ c∈links⇒e1=e2"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="run∈past  past"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="partition(COM,{Send},{Receive})"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒e1 ↦ e2∈prec∨e2 ↦ e1∈prec"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧peerOf(e1)≠peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="prec∈past  past"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="run;run⊆run"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀ep⦂EVENT·ep∈past∧comOf(ep)=Receive⇒mesOf(ep)≠m"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="prec∩prec∼⊆(id ⦂ ℙ(EVENT×EVENT))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="cause∈past⇒cause∈dom(comOf)∧comOf∈EVENT ⇸ COM∧(comOf(cause)=Send⇒cause∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE)"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="eventmapper∈COM × MESSAGE ⤖ EVENT"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀e⦂EVENT·e∈past∧comOf(e)=Receive⇒(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(e)=mesOf(es)∧es ↦ e∈prec)"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="m∈MESSAGE"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="run∩run∼⊆(id ⦂ ℙ(EVENT×EVENT))"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧comOf(e1)=comOf(e2)∧mesOf(e1)=mesOf(e2)⇒e1=e2"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="prec⊆run"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀ep⦂EVENT·ep∈past⇒(∀ep2⦂EVENT·ep2∈past⇒ep2∈dom(peerOf)∧peerOf∈EVENT ⇸ PEER)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆prec"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆run"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀e⦂EVENT,c1⦂EVENT,c2⦂EVENT·e ↦ c1∈links∧e ↦ c2∈links⇒c1=c2"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="links∈past ↔ past"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="prec∪{e ↦ e}∪{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∪{ep⦂EVENT·ep∈past∧(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m∧ep ↦ es∈prec) ∣ ep ↦ e}=prec∪{e ↦ e}∪{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∪{ep⦂EVENT·ep∈past∧ep ↦ cause∈prec ∣ ep ↦ e}"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(c1≠c2∨m1≠m2⇔eventmapper(c1 ↦ m1)≠eventmapper(c2 ↦ m2))"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="peerOf∈past → PEER"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒(e1 ↦ e2∈prec⇔e1 ↦ e2∈run)"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="p∈PEER"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past⇒e1 ↦ e2∈run∨e2 ↦ e1∈run"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="comOf∈past → COM"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="dom(links)∩ran(links)=(∅ ⦂ ℙ(EVENT))"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="cause∈past∧comOf(cause)=Send∧mesOf(cause)=m"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="prec;prec⊆prec"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="links⊆prec"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∀es⦂EVENT,er⦂EVENT·es ↦ er∈links⇒comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er)"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀ep⦂EVENT·ep∈past⇒(∀es⦂EVENT·es∈past⇒es∈dom(comOf)∧comOf∈EVENT ⇸ COM∧(comOf(es)=Send⇒es∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE))"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="mesOf∈past → MESSAGE"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="past∈ℙ(EVENT)"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="receive/grd7/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30" org.eventb.core.prSets="COM,EVENT,MESSAGE,PEER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p3,p29,p17,p8,p18,p4,p26,p13,p16,p24,p9,p25,p5,p2,p22,p14,p28,p15,p30,p19,p23,p20,p6,p27,p11,p7"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC4" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p21,p12,p10,p3,p29,p17,p8,p18,p4,p26,p13,p16,p24,p9,p25,p5,p2,p22,p14,p28,p15,p30,p19,p23,p20,p6,p27,p11,p7">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC4"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
        <org.eventb.core.prIdent name="links" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prIdent name="p" org.eventb.core.type="PEER"/>
        <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
        <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="e∈EVENT ∖ past"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀es⦂EVENT·es∈past⇒es∈dom(comOf)∧comOf∈EVENT ⇸ COM∧(comOf(es)=Send⇒es∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="run∈past  past"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(COM,{Send},{Receive})"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀e⦂EVENT·e∈past⇒e ↦ e∈prec"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒e1 ↦ e2∈prec∨e2 ↦ e1∈prec"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="dom(mesOf)=comOf∼[{Send,Receive}]"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧peerOf(e1)≠peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="prec∈past  past"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="prec∩prec∼⊆(id ⦂ ℙ(EVENT×EVENT)) ▷ past"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀ep⦂EVENT·ep∈past∧comOf(ep)=Receive⇒mesOf(ep)≠m"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀e⦂EVENT·e∈past∧comOf(e)=Receive⇒(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(e)=mesOf(es)∧es ↦ e∈prec)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="m∈MESSAGE"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧e2 ↦ e1∈prec⇒e1=e2"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT,e3⦂EVENT·e1 ↦ e2∈run∧e2 ↦ e3∈run⇒e1 ↦ e3∈run"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="prec⊆run"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆prec"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="links∈past ↔ past"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="peerOf∈past → PEER"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒(e1 ↦ e2∈prec⇔e1 ↦ e2∈run)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="mesOf∈past ⇸ MESSAGE"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="p∈PEER"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past⇒e1 ↦ e2∈run∨e2 ↦ e1∈run"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="comOf∈past → COM"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="prec;prec⊆prec"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="links⊆prec"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT,e3⦂EVENT·e1 ↦ e2∈prec∧e2 ↦ e3∈prec⇒e1 ↦ e3∈prec"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧{comOf(e1),comOf(e2)}⊆{Send,Receive}∧comOf(e1)=comOf(e2)∧mesOf(e1)=mesOf(e2)⇒e1=e2"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈run∧e2 ↦ e1∈run⇒e1=e2"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="past∈ℙ(EVENT)"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec⇒e1 ↦ e2∈run"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="receive/act4/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="ep2,ep" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="COM,EVENT,MESSAGE,PEER">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(COM,{Send},{Receive}))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6">
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p6" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p17">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p8"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10"/>
                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p12"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14,p15,p16"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p14,p15" org.eventb.core.prInfHyps="p19"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20,p21,p22,p23"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="p21,p22" org.eventb.core.prInfHyps="p24"/>
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25"/>
                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p26"/>
                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p27"/>
                                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p28"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29"/>
                                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'">
                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30"/>
                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees ep)" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p31">
                                                                                        <org.eventb.core.prIdent name="ep" org.eventb.core.type="EVENT"/>
                                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p31" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p33" org.eventb.core.prHyps="p32">
                                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees ep2)" org.eventb.core.prGoal="p33" org.eventb.core.prHyps="">
                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p34">
                                                                                                        <org.eventb.core.prIdent name="ep2" org.eventb.core.type="EVENT"/>
                                                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p34" org.eventb.core.prHyps="">
                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p36" org.eventb.core.prHyps="p35">
                                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p36" org.eventb.core.prHyps="">
                                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p37">
                                                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p37" org.eventb.core.prHyps="p2">
                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p35">
                                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p35" org.eventb.core.prHyps="p35"/>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                            <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                                                        </org.eventb.core.prRule>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p38">
                                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p38" org.eventb.core.prHyps="p2"/>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="cause∈dom(comOf)">
            <org.eventb.core.prIdent name="cause" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀es⦂EVENT·es∈past⇒es∈dom(comOf)∧comOf∈EVENT ⇸ COM∧(comOf(es)=Send⇒es∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬Send=Receive">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(COM,{Send},{Receive})">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀ep⦂EVENT·ep∈past∧comOf(ep)=Receive⇒¬mesOf(ep)=m">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧peerOf(e1)≠peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="mesOf∈EVENT ⇸ MESSAGE"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀es⦂EVENT·es∈past⇒es∈dom(comOf)∧⊤∧(comOf(es)=Send⇒es∈dom(mesOf)∧⊤)"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀ep⦂EVENT·ep∈past∧comOf(ep)=Receive⇒mesOf(ep)≠m">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="cause∈past⇒cause∈dom(comOf)∧comOf∈EVENT ⇸ COM∧(comOf(cause)=Send⇒cause∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE)">
            <org.eventb.core.prIdent name="cause" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="ep∈past⇒(∀ep2⦂EVENT·ep2∈past⇒ep2∈dom(peerOf)∧peerOf∈EVENT ⇸ PEER)">
            <org.eventb.core.prIdent name="ep" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="comOf(cause)=Send">
            <org.eventb.core.prIdent name="cause" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∀ep2⦂EVENT·ep2∈past⇒ep2∈dom(peerOf)∧peerOf∈EVENT ⇸ PEER"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="m∈MESSAGE">
            <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="cause∈past">
            <org.eventb.core.prIdent name="cause" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∀ep⦂EVENT·ep∈past⇒(∀ep2⦂EVENT·ep2∈past⇒ep2∈dom(peerOf)∧peerOf∈EVENT ⇸ PEER))∧(∀ep⦂EVENT·ep∈past⇒(∀es⦂EVENT·es∈past⇒es∈dom(comOf)∧comOf∈EVENT ⇸ COM∧(comOf(es)=Send⇒es∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE)))"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀ep⦂EVENT·ep∈past⇒(∀ep2⦂EVENT·ep2∈past⇒ep2∈dom(peerOf)∧peerOf∈EVENT ⇸ PEER)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="COM={Send,Receive}">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="peerOf∈past → PEER"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(c1≠c2∨m1≠m2⇔eventmapper(c1 ↦ m1)≠eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="comOf∈EVENT ⇸ COM"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="p∈PEER">
            <org.eventb.core.prIdent name="p" org.eventb.core.type="PEER"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="(∀ep⦂EVENT·ep∈past⇒(∀ep2⦂EVENT·ep2∈past⇒ep2∈dom(peerOf)∧peerOf∈EVENT ⇸ PEER))∧(∀ep⦂EVENT·ep∈past⇒⊤)"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀es⦂EVENT·es∈past⇒es∈dom(comOf)∧(comOf(es)=Send⇒es∈dom(mesOf))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="⊤⇒cause∈dom(comOf)∧comOf∈EVENT ⇸ COM∧(⊤⇒cause∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE)">
            <org.eventb.core.prIdent name="cause" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="peerOf∈EVENT ⇸ PEER"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="cause∈past∧comOf(cause)=Send∧mesOf(cause)=m">
            <org.eventb.core.prIdent name="cause" org.eventb.core.type="EVENT"/>
            <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="ep2∈dom(peerOf)">
            <org.eventb.core.prIdent name="ep2" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="ep∈past">
            <org.eventb.core.prIdent name="ep" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2)">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="ep2∈dom(peerOf)∧peerOf∈EVENT ⇸ PEER">
            <org.eventb.core.prIdent name="ep2" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧¬peerOf(e1)=peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="mesOf(cause)=m">
            <org.eventb.core.prIdent name="cause" org.eventb.core.type="EVENT"/>
            <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·⊤∧⊤∧⊤∧⊤⇒(¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="ep2∈past⇒ep2∈dom(peerOf)∧peerOf∈EVENT ⇸ PEER">
            <org.eventb.core.prIdent name="ep2" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="cause∈dom(mesOf)">
            <org.eventb.core.prIdent name="cause" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="past∈ℙ(EVENT)"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="ep2∈past">
            <org.eventb.core.prIdent name="ep2" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="past"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL4"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r9" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="inv1/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="e1,e2" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="COM,EVENT,MESSAGE">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(COM,{Send},{Receive}))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p8"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees e1,e2)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p11">
                                                <org.eventb.core.prIdent name="e1" org.eventb.core.type="EVENT"/>
                                                <org.eventb.core.prIdent name="e2" org.eventb.core.type="EVENT"/>
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p11" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p14" org.eventb.core.prHyps="p12,p13">
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p14" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15">
                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p15" org.eventb.core.prHyps="p2">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p12" org.eventb.core.prHyps="p12"/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p16">
                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p16" org.eventb.core.prHyps="p2"/>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p17">
                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="p2">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p13">
                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="p13"/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p18">
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p18" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p20" org.eventb.core.prHyps="p19">
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p20" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p21">
                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="p1">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p12" org.eventb.core.prHyps="p12"/>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p22">
                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p22" org.eventb.core.prHyps="p1"/>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p23">
                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p23" org.eventb.core.prHyps="p1">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p13">
                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="p13"/>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="comOf(e1)=comOf(e2)⇒e1∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE∧e2∈dom(mesOf)">
            <org.eventb.core.prIdent name="e1" org.eventb.core.type="EVENT"/>
            <org.eventb.core.prIdent name="e2" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬Send=Receive">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="COM={Send,Receive}">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="e1∈past">
            <org.eventb.core.prIdent name="e1" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(c1≠c2∨m1≠m2⇔eventmapper(c1 ↦ m1)≠eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="e1∈dom(comOf)">
            <org.eventb.core.prIdent name="e1" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(COM,{Send},{Receive})">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="comOf∈EVENT ⇸ COM"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="comOf∈past → COM"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="e1∈dom(mesOf)">
            <org.eventb.core.prIdent name="e1" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2)">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="e1∈dom(comOf)∧comOf∈EVENT ⇸ COM∧e2∈dom(comOf)∧(comOf(e1)=comOf(e2)⇒e1∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE∧e2∈dom(mesOf))">
            <org.eventb.core.prIdent name="e1" org.eventb.core.type="EVENT"/>
            <org.eventb.core.prIdent name="e2" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="mesOf∈EVENT ⇸ MESSAGE"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="comOf(e1)=comOf(e2)">
            <org.eventb.core.prIdent name="e1" org.eventb.core.type="EVENT"/>
            <org.eventb.core.prIdent name="e2" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="mesOf∈past → MESSAGE"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="e1∈past∧e2∈past⇒e1∈dom(comOf)∧comOf∈EVENT ⇸ COM∧e2∈dom(comOf)∧(comOf(e1)=comOf(e2)⇒e1∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE∧e2∈dom(mesOf))">
            <org.eventb.core.prIdent name="e1" org.eventb.core.type="EVENT"/>
            <org.eventb.core.prIdent name="e2" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="e2∈dom(comOf)">
            <org.eventb.core.prIdent name="e2" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="e1∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE∧e2∈dom(mesOf)">
            <org.eventb.core.prIdent name="e1" org.eventb.core.type="EVENT"/>
            <org.eventb.core.prIdent name="e2" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past⇒e1∈dom(comOf)∧comOf∈EVENT ⇸ COM∧e2∈dom(comOf)∧(comOf(e1)=comOf(e2)⇒e1∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE∧e2∈dom(mesOf))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·⊤∧⊤∧⊤∧⊤⇒(¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="e2∈dom(mesOf)">
            <org.eventb.core.prIdent name="e2" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="past∈ℙ(EVENT)"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="e2∈past">
            <org.eventb.core.prIdent name="e2" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="past"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/inv1/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="COM,EVENT,MESSAGE">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(COM,{Send},{Receive}))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p6" org.eventb.core.prHyps=""/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈(∅ ⦂ ℙ(EVENT))∧e2∈(∅ ⦂ ℙ(EVENT))∧(∅ ⦂ ℙ(EVENT×COM))(e1)=(∅ ⦂ ℙ(EVENT×COM))(e2)∧(∅ ⦂ ℙ(EVENT×MESSAGE))(e1)=(∅ ⦂ ℙ(EVENT×MESSAGE))(e2)⇒e1=e2"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="¬Send=Receive">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="COM={Send,Receive}">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(c1≠c2∨m1≠m2⇔eventmapper(c1 ↦ m1)≠eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(COM,{Send},{Receive})">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="send/inv1/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31" org.eventb.core.prSets="COM,EVENT,MESSAGE,PEER">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p14,p16,p17,p18,p19,p20,p21,p22,p24,p25,p26,p27,p28,p29,p30,p31"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
        <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        <org.eventb.core.prIdent name="links" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prIdent name="p" org.eventb.core.type="PEER"/>
        <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
        <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="e∈EVENT ∖ past"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT,c⦂EVENT·e1 ↦ c∈links∧e2 ↦ c∈links⇒e1=e2"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="run∈past  past"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(COM,{Send},{Receive})"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒e1 ↦ e2∈prec∨e2 ↦ e1∈prec"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧peerOf(e1)≠peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="prec∈past  past"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="run;run⊆run"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="prec∩prec∼⊆(id ⦂ ℙ(EVENT×EVENT))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="eventmapper∈COM × MESSAGE ⤖ EVENT"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀e⦂EVENT·e∈past∧comOf(e)=Receive⇒(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(e)=mesOf(es)∧es ↦ e∈prec)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="run∩run∼⊆(id ⦂ ℙ(EVENT×EVENT))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧comOf(e1)=comOf(e2)∧mesOf(e1)=mesOf(e2)⇒e1=e2"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="prec⊆run"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="m∈MESSAGE ∖ ran(mesOf)"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆prec"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆run"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀e⦂EVENT,c1⦂EVENT,c2⦂EVENT·e ↦ c1∈links∧e ↦ c2∈links⇒c1=c2"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="links∈past ↔ past"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(c1≠c2∨m1≠m2⇔eventmapper(c1 ↦ m1)≠eventmapper(c2 ↦ m2))"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="peerOf∈past → PEER"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒(e1 ↦ e2∈prec⇔e1 ↦ e2∈run)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="p∈PEER"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past⇒e1 ↦ e2∈run∨e2 ↦ e1∈run"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="comOf∈past → COM"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="dom(links)∩ran(links)=(∅ ⦂ ℙ(EVENT))"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="prec;prec⊆prec"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="links⊆prec"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀es⦂EVENT,er⦂EVENT·es ↦ er∈links⇒comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er)"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="mesOf∈past → MESSAGE"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∪{e}∧e2∈past∪{e}∧(comOf∪{e ↦ Send})(e1)=(comOf∪{e ↦ Send})(e2)∧(mesOf∪{e ↦ m})(e1)=(mesOf∪{e ↦ m})(e2)⇒e1=e2"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="past∈ℙ(EVENT)"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="receive/inv1/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34" org.eventb.core.prSets="COM,EVENT,MESSAGE,PEER">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p2,p3,p4,p5,p6,p7,p8,p9,p11,p12,p13,p15,p17,p18,p19,p20,p21,p22,p23,p24,p26,p27,p28,p29,p30,p31,p32,p34"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
        <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        <org.eventb.core.prIdent name="links" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prIdent name="p" org.eventb.core.type="PEER"/>
        <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
        <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="e∈EVENT ∖ past"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀es⦂EVENT·es∈past⇒es∈dom(comOf)∧comOf∈EVENT ⇸ COM∧(comOf(es)=Send⇒es∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT,c⦂EVENT·e1 ↦ c∈links∧e2 ↦ c∈links⇒e1=e2"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="run∈past  past"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="partition(COM,{Send},{Receive})"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒e1 ↦ e2∈prec∨e2 ↦ e1∈prec"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧peerOf(e1)≠peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="prec∈past  past"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="run;run⊆run"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀ep⦂EVENT·ep∈past∧comOf(ep)=Receive⇒mesOf(ep)≠m"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="prec∩prec∼⊆(id ⦂ ℙ(EVENT×EVENT))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="eventmapper∈COM × MESSAGE ⤖ EVENT"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀e⦂EVENT·e∈past∧comOf(e)=Receive⇒(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(e)=mesOf(es)∧es ↦ e∈prec)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="m∈MESSAGE"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="run∩run∼⊆(id ⦂ ℙ(EVENT×EVENT))"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧comOf(e1)=comOf(e2)∧mesOf(e1)=mesOf(e2)⇒e1=e2"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="prec⊆run"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆prec"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆run"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀e⦂EVENT,c1⦂EVENT,c2⦂EVENT·e ↦ c1∈links∧e ↦ c2∈links⇒c1=c2"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="links∈past ↔ past"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(c1≠c2∨m1≠m2⇔eventmapper(c1 ↦ m1)≠eventmapper(c2 ↦ m2))"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="peerOf∈past → PEER"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒(e1 ↦ e2∈prec⇔e1 ↦ e2∈run)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∪{e}∧e2∈past∪{e}∧(comOf∪{e ↦ Receive})(e1)=(comOf∪{e ↦ Receive})(e2)∧(mesOf∪{e ↦ m})(e1)=(mesOf∪{e ↦ m})(e2)⇒e1=e2"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="p∈PEER"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past⇒e1 ↦ e2∈run∨e2 ↦ e1∈run"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="comOf∈past → COM"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="dom(links)∩ran(links)=(∅ ⦂ ℙ(EVENT))"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="prec;prec⊆prec"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="links⊆prec"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀es⦂EVENT,er⦂EVENT·es ↦ er∈links⇒comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er)"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="mesOf∈past → MESSAGE"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="past∈ℙ(EVENT)"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/act3/SIM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="EVENT">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(COM,{Send},{Receive}))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p6" org.eventb.core.prHyps=""/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∅ ⦂ ℙ(EVENT×EVENT))=(∅ ⦂ ℙ(EVENT×EVENT))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="¬Send=Receive">
            <org.eventb.core.prIdent name="COM" org.eventb.core.type="ℙ(COM)"/>
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="COM={Send,Receive}">
            <org.eventb.core.prIdent name="COM" org.eventb.core.type="ℙ(COM)"/>
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(c1≠c2∨m1≠m2⇔eventmapper(c1 ↦ m1)≠eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="COM" org.eventb.core.type="ℙ(COM)"/>
            <org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="COM" org.eventb.core.type="ℙ(COM)"/>
            <org.eventb.core.prIdent name="MESSAGE" org.eventb.core.type="ℙ(MESSAGE)"/>
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(COM,{Send},{Receive})">
            <org.eventb.core.prIdent name="COM" org.eventb.core.type="ℙ(COM)"/>
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="receive/cause/WWD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="COM,EVENT,MESSAGE">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(COM,{Send},{Receive}))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p12"/>
                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p13"/>
                                <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p14"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p15"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p18" org.eventb.core.prHyps="p17">
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p18" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p19" org.eventb.core.prHyps="p2">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p17">
                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="p17"/>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                            <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p20">
                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p20" org.eventb.core.prHyps="p2"/>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p21">
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p23" org.eventb.core.prHyps="p22">
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p23" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p24">
                                                                        <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with comOf(cause)=Send" org.eventb.core.prHyps="p22">
                                                                            <org.eventb.core.prAnte name="'">
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p25" org.eventb.core.prInfHyps="p26"/>
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p27"/>
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p28"/>
                                                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p4,p25,p5"/>
                                                                                <org.eventb.core.prHypAction name="DESELECT4" org.eventb.core.prHyps="p22"/>
                                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="p1">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p17">
                                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="p17"/>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p29">
                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p29" org.eventb.core.prHyps="p1"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="cause" org.eventb.core.type="EVENT"/>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="cause∈dom(comOf)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬Send=Receive">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(COM,{Send},{Receive})">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀ep⦂EVENT·ep∈past∧comOf(ep)=Receive⇒¬mesOf(ep)=m">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="comOf(cause)=Send⇒cause∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧peerOf(e1)≠peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))">
            <org.eventb.core.prIdent name="PEER" org.eventb.core.type="ℙ(PEER)"/>
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="mesOf∈EVENT ⇸ MESSAGE"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∃es⦂EVENT·es∈past∧comOf(es)=comOf(cause)∧mesOf(es)=m">
            <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="cause∈past⇒cause∈dom(comOf)∧comOf∈EVENT ⇸ COM∧(comOf(cause)=Send⇒cause∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE)"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀ep⦂EVENT·ep∈past∧comOf(ep)=Receive⇒mesOf(ep)≠m">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="comOf(cause)=Send"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="m∈MESSAGE">
            <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="cause∈past"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="COM={Send,Receive}">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="cause∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(c1≠c2∨m1≠m2⇔eventmapper(c1 ↦ m1)≠eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="p∈PEER">
            <org.eventb.core.prIdent name="PEER" org.eventb.core.type="ℙ(PEER)"/>
            <org.eventb.core.prIdent name="p" org.eventb.core.type="PEER"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="comOf∈EVENT ⇸ COM"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="comOf∈past → COM"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬comOf(cause)=Receive">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="cause∈dom(comOf)∧comOf∈EVENT ⇸ COM∧(comOf(cause)=Send⇒cause∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE)"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2)">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="mesOf∈past → MESSAGE"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧¬peerOf(e1)=peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))">
            <org.eventb.core.prIdent name="PEER" org.eventb.core.type="ℙ(PEER)"/>
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m">
            <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="COM={comOf(cause),Receive}">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·⊤∧⊤∧⊤∧⊤⇒(¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="cause∈dom(mesOf)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="past∈ℙ(EVENT)"/>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="past"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.heL2:1"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="receive/cause/WFIS" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="COM,EVENT,MESSAGE">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∃cause⦂EVENT·cause∈past∧comOf(cause)=Send∧mesOf(cause)=m"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="receive/links'/WWD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="COM,EVENT,MESSAGE">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀es⦂EVENT·es∈past⇒es∈dom(comOf)∧comOf∈EVENT ⇸ COM∧(comOf(es)=Send⇒es∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE)"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="inv2/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="e,es" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="COM,EVENT,MESSAGE">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(COM,{Send},{Receive}))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p8">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p9"/>
                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p8" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p12">
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees e)" org.eventb.core.prGoal="p12" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p13">
                                                        <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p13" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p15" org.eventb.core.prHyps="p14">
                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p15" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p16">
                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p16" org.eventb.core.prHyps="p2">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p14">
                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p14" org.eventb.core.prHyps="p14"/>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                            <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p17">
                                                                        <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="p2"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p18">
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees e)" org.eventb.core.prGoal="p18" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
                                                        <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p19" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="p14,p20">
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees es)" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p22">
                                                                        <org.eventb.core.prIdent name="es" org.eventb.core.type="EVENT"/>
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p22" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="p23">
                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p25">
                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with comOf(e)=Receive" org.eventb.core.prHyps="p20">
                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p26"/>
                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p27"/>
                                                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                                                <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p20"/>
                                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p25" org.eventb.core.prHyps="p2">
                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p23">
                                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p23" org.eventb.core.prHyps="p23"/>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p28">
                                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p28" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="p29">
                                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="">
                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p31">
                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with comOf(e)=Receive" org.eventb.core.prHyps="p20">
                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p26"/>
                                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p27"/>
                                                                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                                                                <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p20"/>
                                                                                                                <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with comOf(es)=Send" org.eventb.core.prHyps="p29">
                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p26" org.eventb.core.prInfHyps="p32"/>
                                                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p27" org.eventb.core.prInfHyps="p33"/>
                                                                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p27,p26"/>
                                                                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p29"/>
                                                                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p31" org.eventb.core.prHyps="p1">
                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p14">
                                                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p14" org.eventb.core.prHyps="p14"/>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                            <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                                                        </org.eventb.core.prRule>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p34">
                                                                                                        <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p34" org.eventb.core.prHyps="p1"/>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                    <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p35">
                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with comOf(e)=Receive" org.eventb.core.prHyps="p20">
                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p26"/>
                                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p27"/>
                                                                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                                                                <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p20"/>
                                                                                                                <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with comOf(es)=Send" org.eventb.core.prHyps="p29">
                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p26" org.eventb.core.prInfHyps="p32"/>
                                                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p27" org.eventb.core.prInfHyps="p33"/>
                                                                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p27,p26"/>
                                                                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p29"/>
                                                                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p35" org.eventb.core.prHyps="p1">
                                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p23">
                                                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p23" org.eventb.core.prHyps="p23"/>
                                                                                                                            </org.eventb.core.prAnte>
                                                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                                            <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                                                        </org.eventb.core.prRule>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬Send=comOf(e)">
            <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬Send=Receive"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀e⦂EVENT·e∈past⇒e∈dom(comOf)∧comOf∈EVENT ⇸ COM"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="e∈dom(comOf)∧comOf∈EVENT ⇸ COM">
            <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="comOf(e)=Receive">
            <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="COM={comOf(es),comOf(e)}">
            <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
            <org.eventb.core.prIdent name="es" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(COM,{Send},{Receive})"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="e∈dom(mesOf)">
            <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="comOf(es)=Send">
            <org.eventb.core.prIdent name="es" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="es∈dom(comOf)∧(comOf(es)=Send⇒e∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE∧es∈dom(mesOf))">
            <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
            <org.eventb.core.prIdent name="es" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="es∈dom(comOf)">
            <org.eventb.core.prIdent name="es" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="mesOf∈EVENT ⇸ MESSAGE"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬comOf(es)=comOf(e)">
            <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
            <org.eventb.core.prIdent name="es" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="es∈past⇒es∈dom(comOf)∧(comOf(es)=Send⇒e∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE∧es∈dom(mesOf))">
            <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
            <org.eventb.core.prIdent name="es" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="e∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE∧es∈dom(mesOf)">
            <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
            <org.eventb.core.prIdent name="es" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="comOf(es)=Send⇒e∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE∧es∈dom(mesOf)">
            <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
            <org.eventb.core.prIdent name="es" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀e⦂EVENT·e∈past∧comOf(e)=Receive⇒(∀es⦂EVENT·es∈past⇒es∈dom(comOf)∧(comOf(es)=Send⇒e∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE∧es∈dom(mesOf)))"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="COM={Send,comOf(e)}">
            <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="es∈past">
            <org.eventb.core.prIdent name="es" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="e∈dom(comOf)">
            <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="COM={Send,Receive}"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="e∈past">
            <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(c1≠c2∨m1≠m2⇔eventmapper(c1 ↦ m1)≠eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀es⦂EVENT·es∈past⇒es∈dom(comOf)∧(comOf(es)=Send⇒e∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE∧es∈dom(mesOf))">
            <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="(∀e⦂EVENT·e∈past⇒e∈dom(comOf)∧comOf∈EVENT ⇸ COM)∧(∀e⦂EVENT·e∈past∧comOf(e)=Receive⇒(∀es⦂EVENT·es∈past⇒es∈dom(comOf)∧(comOf(es)=Send⇒e∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE∧es∈dom(mesOf))))"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="comOf∈EVENT ⇸ COM"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="comOf∈past → COM"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="e∈past⇒e∈dom(comOf)∧comOf∈EVENT ⇸ COM">
            <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2)">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="es∈dom(mesOf)">
            <org.eventb.core.prIdent name="es" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="mesOf∈past → MESSAGE"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="e∈past∧comOf(e)=Receive⇒(∀es⦂EVENT·es∈past⇒es∈dom(comOf)∧(comOf(es)=Send⇒e∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE∧es∈dom(mesOf)))">
            <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀e⦂EVENT·(e∈past⇒e∈dom(comOf)∧comOf∈EVENT ⇸ COM)∧(e∈past∧comOf(e)=Receive⇒(∀es⦂EVENT·es∈past⇒es∈dom(comOf)∧(comOf(es)=Send⇒e∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE∧es∈dom(mesOf))))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·⊤∧⊤∧⊤∧⊤⇒(¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="past∈ℙ(EVENT)"/>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="past"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r9" org.eventb.core.prRID="org.eventb.core.seqprover.heL2:1"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/inv2/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="COM,EVENT,MESSAGE">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(COM,{Send},{Receive}))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p6" org.eventb.core.prHyps=""/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀e⦂EVENT·e∈(∅ ⦂ ℙ(EVENT))∧(∅ ⦂ ℙ(EVENT×COM))(e)=Receive⇒(∃es⦂EVENT·es∈(∅ ⦂ ℙ(EVENT))∧(∅ ⦂ ℙ(EVENT×COM))(es)=Send∧(∅ ⦂ ℙ(EVENT×MESSAGE))(e)=(∅ ⦂ ℙ(EVENT×MESSAGE))(es)∧es ↦ e∈(∅ ⦂ ℙ(EVENT×EVENT)))"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="¬Send=Receive"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="COM={Send,Receive}"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(c1≠c2∨m1≠m2⇔eventmapper(c1 ↦ m1)≠eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(COM,{Send},{Receive})"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="send/inv2/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4" org.eventb.core.prSets="COM,EVENT,MESSAGE,PEER">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p5,p3,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p4,p21,p22,p23,p24,p25,p26,p27"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Z3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="Z3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
        <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prIdent name="p" org.eventb.core.type="PEER"/>
        <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
        <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="e∈EVENT ∖ past"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="run∈past  past">
            <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(COM,{Send},{Receive})"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀e⦂EVENT·e∈past⇒e ↦ e∈prec"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒e1 ↦ e2∈prec∨e2 ↦ e1∈prec"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="dom(mesOf)=comOf∼[{Send,Receive}]"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧peerOf(e1)≠peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="prec∈past  past"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="prec∩prec∼⊆(id ⦂ ℙ(EVENT×EVENT)) ▷ past"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀e⦂EVENT·e∈past∧comOf(e)=Receive⇒(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(e)=mesOf(es)∧es ↦ e∈prec)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀e0⦂EVENT·e0∈past∪{e}∧(comOf∪{e ↦ Send})(e0)=Receive⇒(∃es⦂EVENT·es∈past∪{e}∧(comOf∪{e ↦ Send})(es)=Send∧(mesOf∪{e ↦ m})(e0)=(mesOf∪{e ↦ m})(es)∧es ↦ e0∈prec∪{e ↦ e}∪{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e})"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧e2 ↦ e1∈prec⇒e1=e2"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT,e3⦂EVENT·e1 ↦ e2∈run∧e2 ↦ e3∈run⇒e1 ↦ e3∈run">
            <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="prec⊆run">
            <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆prec"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="links∈past ↔ past">
            <org.eventb.core.prIdent name="links" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="peerOf∈past → PEER"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒(e1 ↦ e2∈prec⇔e1 ↦ e2∈run)">
            <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="mesOf∈past ⇸ MESSAGE"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past⇒e1 ↦ e2∈run∨e2 ↦ e1∈run">
            <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="comOf∈past → COM"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="prec;prec⊆prec"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="links⊆prec">
            <org.eventb.core.prIdent name="links" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT,e3⦂EVENT·e1 ↦ e2∈prec∧e2 ↦ e3∈prec⇒e1 ↦ e3∈prec"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧{comOf(e1),comOf(e2)}⊆{Send,Receive}∧comOf(e1)=comOf(e2)∧mesOf(e1)=mesOf(e2)⇒e1=e2"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈run∧e2 ↦ e1∈run⇒e1=e2">
            <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="past∈ℙ(EVENT)"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec⇒e1 ↦ e2∈run">
            <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="receive/inv2/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34" org.eventb.core.prSets="COM,EVENT,MESSAGE,PEER">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p2,p3,p4,p5,p6,p7,p8,p9,p11,p13,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p26,p27,p28,p29,p30,p31,p32,p34"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
        <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        <org.eventb.core.prIdent name="links" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prIdent name="p" org.eventb.core.type="PEER"/>
        <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
        <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="e∈EVENT ∖ past"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀es⦂EVENT·es∈past⇒es∈dom(comOf)∧comOf∈EVENT ⇸ COM∧(comOf(es)=Send⇒es∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT,c⦂EVENT·e1 ↦ c∈links∧e2 ↦ c∈links⇒e1=e2"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="run∈past  past"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="partition(COM,{Send},{Receive})"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒e1 ↦ e2∈prec∨e2 ↦ e1∈prec"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧peerOf(e1)≠peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="prec∈past  past"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀e0⦂EVENT·e0∈past∪{e}∧(comOf∪{e ↦ Receive})(e0)=Receive⇒(∃es⦂EVENT·es∈past∪{e}∧(comOf∪{e ↦ Receive})(es)=Send∧(mesOf∪{e ↦ m})(e0)=(mesOf∪{e ↦ m})(es)∧es ↦ e0∈prec∪{e ↦ e}∪{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∪{ep⦂EVENT·ep∈past∧(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m∧ep ↦ es∈prec) ∣ ep ↦ e})"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="run;run⊆run"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀ep⦂EVENT·ep∈past∧comOf(ep)=Receive⇒mesOf(ep)≠m"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="prec∩prec∼⊆(id ⦂ ℙ(EVENT×EVENT))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀e⦂EVENT·e∈past∧comOf(e)=Receive⇒(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(e)=mesOf(es)∧es ↦ e∈prec)"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="eventmapper∈COM × MESSAGE ⤖ EVENT"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="m∈MESSAGE"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="run∩run∼⊆(id ⦂ ℙ(EVENT×EVENT))"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧comOf(e1)=comOf(e2)∧mesOf(e1)=mesOf(e2)⇒e1=e2"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="prec⊆run"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆prec"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆run"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀e⦂EVENT,c1⦂EVENT,c2⦂EVENT·e ↦ c1∈links∧e ↦ c2∈links⇒c1=c2"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="links∈past ↔ past"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(c1≠c2∨m1≠m2⇔eventmapper(c1 ↦ m1)≠eventmapper(c2 ↦ m2))"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="peerOf∈past → PEER"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒(e1 ↦ e2∈prec⇔e1 ↦ e2∈run)"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="p∈PEER"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past⇒e1 ↦ e2∈run∨e2 ↦ e1∈run"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="comOf∈past → COM"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="dom(links)∩ran(links)=(∅ ⦂ ℙ(EVENT))"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="prec;prec⊆prec"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="links⊆prec"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀es⦂EVENT,er⦂EVENT·es ↦ er∈links⇒comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er)"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="mesOf∈past → MESSAGE"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="past∈ℙ(EVENT)"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/TmesOf2/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="COM,EVENT,MESSAGE">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="Z3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="dom(∅ ⦂ ℙ(EVENT×MESSAGE))=(∅ ⦂ ℙ(EVENT×COM))∼[{Send,Receive}]"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(COM,{Send},{Receive})"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="send/TmesOf2/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29" org.eventb.core.prSets="COM,EVENT,MESSAGE,PEER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p3,p28,p16,p8,p17,p4,p25,p11,p15,p23,p9,p24,p5,p2,p21,p12,p27,p13,p29,p18,p22,p19,p26,p10,p7"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC4" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p6,p1,p20,p14,p3,p28,p16,p8,p17,p4,p25,p11,p15,p23,p9,p24,p5,p2,p21,p12,p27,p13,p29,p18,p22,p19,p26,p10,p7">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC4"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
        <org.eventb.core.prIdent name="links" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prIdent name="p" org.eventb.core.type="PEER"/>
        <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
        <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="e∈EVENT ∖ past"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="run∈past  past"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(COM,{Send},{Receive})"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀e⦂EVENT·e∈past⇒e ↦ e∈prec"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒e1 ↦ e2∈prec∨e2 ↦ e1∈prec"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="dom(mesOf)=comOf∼[{Send,Receive}]"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧peerOf(e1)≠peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="prec∈past  past"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="prec∩prec∼⊆(id ⦂ ℙ(EVENT×EVENT)) ▷ past"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀e⦂EVENT·e∈past∧comOf(e)=Receive⇒(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(e)=mesOf(es)∧es ↦ e∈prec)"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧e2 ↦ e1∈prec⇒e1=e2"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT,e3⦂EVENT·e1 ↦ e2∈run∧e2 ↦ e3∈run⇒e1 ↦ e3∈run"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="prec⊆run"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="m∈MESSAGE ∖ ran(mesOf)"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆prec"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="links∈past ↔ past"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="peerOf∈past → PEER"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒(e1 ↦ e2∈prec⇔e1 ↦ e2∈run)"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="mesOf∈past ⇸ MESSAGE"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="p∈PEER"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past⇒e1 ↦ e2∈run∨e2 ↦ e1∈run"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="comOf∈past → COM"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="prec;prec⊆prec"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="links⊆prec"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="dom(mesOf∪{e ↦ m})=(comOf∪{e ↦ Send})∼[{Send,Receive}]"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT,e3⦂EVENT·e1 ↦ e2∈prec∧e2 ↦ e3∈prec⇒e1 ↦ e3∈prec"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧{comOf(e1),comOf(e2)}⊆{Send,Receive}∧comOf(e1)=comOf(e2)∧mesOf(e1)=mesOf(e2)⇒e1=e2"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈run∧e2 ↦ e1∈run⇒e1=e2"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="past∈ℙ(EVENT)"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec⇒e1 ↦ e2∈run"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="receive/TmesOf2/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32" org.eventb.core.prSets="COM,EVENT,MESSAGE,PEER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p4,p31,p18,p9,p19,p5,p28,p14,p17,p25,p10,p26,p6,p3,p23,p15,p30,p16,p32,p20,p24,p21,p29,p12,p8,p2"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC4" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p7,p1,p22,p13,p11,p27,p4,p31,p18,p9,p19,p5,p28,p14,p17,p25,p10,p26,p6,p3,p23,p15,p30,p16,p32,p20,p24,p21,p29,p12,p8,p2">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC4"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
        <org.eventb.core.prIdent name="links" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prIdent name="p" org.eventb.core.type="PEER"/>
        <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
        <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="e∈EVENT ∖ past"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀es⦂EVENT·es∈past⇒es∈dom(comOf)∧comOf∈EVENT ⇸ COM∧(comOf(es)=Send⇒es∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="run∈past  past"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(COM,{Send},{Receive})"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀e⦂EVENT·e∈past⇒e ↦ e∈prec"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒e1 ↦ e2∈prec∨e2 ↦ e1∈prec"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="dom(mesOf)=comOf∼[{Send,Receive}]"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧peerOf(e1)≠peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="prec∈past  past"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="dom(mesOf∪{e ↦ m})=(comOf∪{e ↦ Receive})∼[{Send,Receive}]"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="prec∩prec∼⊆(id ⦂ ℙ(EVENT×EVENT)) ▷ past"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀ep⦂EVENT·ep∈past∧comOf(ep)=Receive⇒mesOf(ep)≠m"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀e⦂EVENT·e∈past∧comOf(e)=Receive⇒(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(e)=mesOf(es)∧es ↦ e∈prec)"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="m∈MESSAGE"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧e2 ↦ e1∈prec⇒e1=e2"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT,e3⦂EVENT·e1 ↦ e2∈run∧e2 ↦ e3∈run⇒e1 ↦ e3∈run"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="prec⊆run"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆prec"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="links∈past ↔ past"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="peerOf∈past → PEER"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒(e1 ↦ e2∈prec⇔e1 ↦ e2∈run)"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="mesOf∈past ⇸ MESSAGE"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="p∈PEER"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past⇒e1 ↦ e2∈run∨e2 ↦ e1∈run"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="comOf∈past → COM"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="prec;prec⊆prec"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="links⊆prec"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT,e3⦂EVENT·e1 ↦ e2∈prec∧e2 ↦ e3∈prec⇒e1 ↦ e3∈prec"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧{comOf(e1),comOf(e2)}⊆{Send,Receive}∧comOf(e1)=comOf(e2)∧mesOf(e1)=mesOf(e2)⇒e1=e2"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈run∧e2 ↦ e1∈run⇒e1=e2"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="past∈ℙ(EVENT)"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec⇒e1 ↦ e2∈run"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="Lemma3−4/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25" org.eventb.core.prSets="COM,EVENT,MESSAGE,PEER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p2,p24,p13,p6,p15,p3,p21,p9,p12,p19,p7,p20,p4,p1,p17,p10,p23,p11,p25,p16"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p18,p14,p5,p22,p8,p2,p24,p13,p6,p15,p3,p21,p9,p12,p19,p7,p20,p4,p1,p17,p10,p23,p11,p25,p16">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="links" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
        <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="run∈past  past"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·(e1 ↦ e2∈prec⇒e1∈dom(peerOf)∧peerOf∈EVENT ⇸ PEER∧e2∈dom(peerOf))∧(e1 ↦ e2∈prec∧peerOf(e1)≠peerOf(e2)⇒(∀es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec⇒es∈dom(peerOf)∧(peerOf(e1)=peerOf(es)⇒es∈dom(comOf)∧comOf∈EVENT ⇸ COM∧(comOf(es)=Send⇒er∈dom(comOf)∧(comOf(er)=Receive⇒es∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE∧er∈dom(mesOf))))))"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(COM,{Send},{Receive})"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀e⦂EVENT·e∈past⇒e ↦ e∈prec"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒e1 ↦ e2∈prec∨e2 ↦ e1∈prec"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="dom(mesOf)=comOf∼[{Send,Receive}]"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="prec∈past  past"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="prec∩prec∼⊆(id ⦂ ℙ(EVENT×EVENT)) ▷ past"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀e⦂EVENT·e∈past∧comOf(e)=Receive⇒(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(e)=mesOf(es)∧es ↦ e∈prec)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧e2 ↦ e1∈prec⇒e1=e2"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT,e3⦂EVENT·e1 ↦ e2∈run∧e2 ↦ e3∈run⇒e1 ↦ e3∈run"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="prec⊆run"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆prec"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="links∈past ↔ past"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="mesOf∈past ⇸ MESSAGE"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="peerOf∈past → PEER"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒(e1 ↦ e2∈prec⇔e1 ↦ e2∈run)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past⇒e1 ↦ e2∈run∨e2 ↦ e1∈run"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="comOf∈past → COM"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="prec;prec⊆prec"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="links⊆prec"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT,e3⦂EVENT·e1 ↦ e2∈prec∧e2 ↦ e3∈prec⇒e1 ↦ e3∈prec"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧{comOf(e1),comOf(e2)}⊆{Send,Receive}∧comOf(e1)=comOf(e2)∧mesOf(e1)=mesOf(e2)⇒e1=e2"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈run∧e2 ↦ e1∈run⇒e1=e2"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="past∈ℙ(EVENT)"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec⇒e1 ↦ e2∈run"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/Lemma3−4/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="COM,EVENT,MESSAGE,PEER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p1"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="PP (trivial)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="Z3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈(∅ ⦂ ℙ(EVENT×EVENT))∧(∅ ⦂ ℙ(EVENT×PEER))(e1)≠(∅ ⦂ ℙ(EVENT×PEER))(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈(∅ ⦂ ℙ(EVENT×EVENT))∧es ↦ er∈(∅ ⦂ ℙ(EVENT×EVENT))∧er ↦ e2∈(∅ ⦂ ℙ(EVENT×EVENT))∧(∅ ⦂ ℙ(EVENT×PEER))(e1)=(∅ ⦂ ℙ(EVENT×PEER))(es)∧(∅ ⦂ ℙ(EVENT×COM))(es)=Send∧(∅ ⦂ ℙ(EVENT×COM))(er)=Receive∧(∅ ⦂ ℙ(EVENT×MESSAGE))(es)=(∅ ⦂ ℙ(EVENT×MESSAGE))(er))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(COM,{Send},{Receive})"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="send/Lemma3−4/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29" org.eventb.core.prSets="COM,EVENT,MESSAGE,PEER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p3,p28,p16,p8,p17,p4,p25,p11,p15,p23,p9,p24,p5,p2,p21,p12,p27,p13,p29,p18,p22,p19,p6,p26,p10"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p7,p1,p20,p14,p3,p28,p16,p8,p17,p4,p25,p11,p15,p23,p9,p24,p5,p2,p21,p12,p27,p13,p29,p18,p22,p19,p6,p26,p10">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
        <org.eventb.core.prIdent name="links" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prIdent name="p" org.eventb.core.type="PEER"/>
        <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
        <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="e∈EVENT ∖ past"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="run∈past  past"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(COM,{Send},{Receive})"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀e⦂EVENT·e∈past⇒e ↦ e∈prec"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒e1 ↦ e2∈prec∨e2 ↦ e1∈prec"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="dom(mesOf)=comOf∼[{Send,Receive}]"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧peerOf(e1)≠peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="prec∈past  past"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="prec∩prec∼⊆(id ⦂ ℙ(EVENT×EVENT)) ▷ past"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀e⦂EVENT·e∈past∧comOf(e)=Receive⇒(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(e)=mesOf(es)∧es ↦ e∈prec)"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧e2 ↦ e1∈prec⇒e1=e2"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT,e3⦂EVENT·e1 ↦ e2∈run∧e2 ↦ e3∈run⇒e1 ↦ e3∈run"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="prec⊆run"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="m∈MESSAGE ∖ ran(mesOf)"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆prec"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="links∈past ↔ past"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="peerOf∈past → PEER"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒(e1 ↦ e2∈prec⇔e1 ↦ e2∈run)"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="mesOf∈past ⇸ MESSAGE"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∪{e ↦ e}∪{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∧(peerOf∪{e ↦ p})(e1)≠(peerOf∪{e ↦ p})(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∪{e ↦ e}∪{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∧es ↦ er∈prec∪{e ↦ e}∪{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∧er ↦ e2∈prec∪{e ↦ e}∪{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∧(peerOf∪{e ↦ p})(e1)=(peerOf∪{e ↦ p})(es)∧(comOf∪{e ↦ Send})(es)=Send∧(comOf∪{e ↦ Send})(er)=Receive∧(mesOf∪{e ↦ m})(es)=(mesOf∪{e ↦ m})(er))"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="p∈PEER"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past⇒e1 ↦ e2∈run∨e2 ↦ e1∈run"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="comOf∈past → COM"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="prec;prec⊆prec"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="links⊆prec"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT,e3⦂EVENT·e1 ↦ e2∈prec∧e2 ↦ e3∈prec⇒e1 ↦ e3∈prec"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧{comOf(e1),comOf(e2)}⊆{Send,Receive}∧comOf(e1)=comOf(e2)∧mesOf(e1)=mesOf(e2)⇒e1=e2"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈run∧e2 ↦ e1∈run⇒e1=e2"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="past∈ℙ(EVENT)"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec⇒e1 ↦ e2∈run"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="receive/Lemma3−4/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32" org.eventb.core.prSets="COM,EVENT,MESSAGE,PEER">
        <org.eventb.core.lang name="L"/>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(COM,{Send},{Receive}))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33,p34"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p33,p34"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p38">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p31,p18,p9,p19,p4,p28,p14,p17,p25,p26,p5,p3,p23,p15,p30,p16,p32,p20,p24,p21,p7,p29,p12,p2,p35"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p38" org.eventb.core.prHyps="p1,p22,p13,p27,p33,p34,p36,p37,p31,p18,p9,p19,p4,p28,p14,p17,p25,p26,p5,p3,p23,p15,p30,p16,p32,p20,p24,p21,p7,p29,p12,p2,p35">
                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
        <org.eventb.core.prIdent name="links" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prIdent name="p" org.eventb.core.type="PEER"/>
        <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
        <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="e∈EVENT ∖ past"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀es⦂EVENT·es∈past⇒es∈dom(comOf)∧comOf∈EVENT ⇸ COM∧(comOf(es)=Send⇒es∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE)"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬Send=Receive"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="run∈past  past"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀e⦂EVENT·e∈past⇒e ↦ e∈prec"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒e1 ↦ e2∈prec∨e2 ↦ e1∈prec"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="partition(COM,{Send},{Receive})"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀ep⦂EVENT·ep∈past∧comOf(ep)=Receive⇒¬mesOf(ep)=m"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="dom(mesOf)=comOf∼[{Send,Receive}]"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧peerOf(e1)≠peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="prec∈past  past"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="prec∩prec∼⊆(id ⦂ ℙ(EVENT×EVENT)) ▷ past"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀ep⦂EVENT·ep∈past∧comOf(ep)=Receive⇒mesOf(ep)≠m"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀e⦂EVENT·e∈past∧comOf(e)=Receive⇒(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(e)=mesOf(es)∧es ↦ e∈prec)"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="m∈MESSAGE"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∪{e ↦ e}∪{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∪{ep⦂EVENT·ep∈past∧(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m∧ep ↦ es∈prec) ∣ ep ↦ e}∧¬(peerOf∪{e ↦ p})(e1)=(peerOf∪{e ↦ p})(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∪{e ↦ e}∪{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∪{ep⦂EVENT·ep∈past∧(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m∧ep ↦ es∈prec) ∣ ep ↦ e}∧es ↦ er∈prec∪{e ↦ e}∪{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∪{ep⦂EVENT·ep∈past∧(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m∧ep ↦ es∈prec) ∣ ep ↦ e}∧er ↦ e2∈prec∪{e ↦ e}∪{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∪{ep⦂EVENT·ep∈past∧(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m∧ep ↦ es∈prec) ∣ ep ↦ e}∧(peerOf∪{e ↦ p})(e1)=(peerOf∪{e ↦ p})(es)∧(comOf∪{e ↦ Receive})(es)=Send∧(comOf∪{e ↦ Receive})(er)=Receive∧(mesOf∪{e ↦ m})(es)=(mesOf∪{e ↦ m})(er))"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧e2 ↦ e1∈prec⇒e1=e2"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT,e3⦂EVENT·e1 ↦ e2∈run∧e2 ↦ e3∈run⇒e1 ↦ e3∈run"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="prec⊆run"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆prec"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∪{e ↦ e}∪{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∪{ep⦂EVENT·ep∈past∧(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m∧ep ↦ es∈prec) ∣ ep ↦ e}∧(peerOf∪{e ↦ p})(e1)≠(peerOf∪{e ↦ p})(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∪{e ↦ e}∪{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∪{ep⦂EVENT·ep∈past∧(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m∧ep ↦ es∈prec) ∣ ep ↦ e}∧es ↦ er∈prec∪{e ↦ e}∪{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∪{ep⦂EVENT·ep∈past∧(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m∧ep ↦ es∈prec) ∣ ep ↦ e}∧er ↦ e2∈prec∪{e ↦ e}∪{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∪{ep⦂EVENT·ep∈past∧(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m∧ep ↦ es∈prec) ∣ ep ↦ e}∧(peerOf∪{e ↦ p})(e1)=(peerOf∪{e ↦ p})(es)∧(comOf∪{e ↦ Receive})(es)=Send∧(comOf∪{e ↦ Receive})(er)=Receive∧(mesOf∪{e ↦ m})(es)=(mesOf∪{e ↦ m})(er))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="links∈past ↔ past"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="COM={Send,Receive}"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="peerOf∈past → PEER"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒(e1 ↦ e2∈prec⇔e1 ↦ e2∈run)"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="mesOf∈past ⇸ MESSAGE"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="p∈PEER"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past⇒e1 ↦ e2∈run∨e2 ↦ e1∈run"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="comOf∈past → COM"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="prec∩prec∼⊆past ◁ (id ⦂ ℙ(EVENT×EVENT))"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="prec;prec⊆prec"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="links⊆prec"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧¬peerOf(e1)=peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT,e3⦂EVENT·e1 ↦ e2∈prec∧e2 ↦ e3∈prec⇒e1 ↦ e3∈prec"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧{comOf(e1),comOf(e2)}⊆{Send,Receive}∧comOf(e1)=comOf(e2)∧mesOf(e1)=mesOf(e2)⇒e1=e2"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈run∧e2 ↦ e1∈run⇒e1=e2"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="past∈ℙ(EVENT)"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec⇒e1 ↦ e2∈run"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="receive/grd3/GRD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7" org.eventb.core.prSets="COM,EVENT,MESSAGE">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p8,p9,p10,p11,p12,p13,p14,p15,p16,p6,p17,p18,p19,p20,p21,p22,p23,p5,p24,p25,p26,p27,p28,p29,p30,p31,p2,p3,p32,p33"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Z3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1500"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="Z3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="cause" org.eventb.core.type="EVENT"/>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="links" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀es⦂EVENT·es∈past⇒es∈dom(comOf)∧comOf∈EVENT ⇸ COM∧(comOf(es)=Send⇒es∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT,c⦂EVENT·e1 ↦ c∈links∧e2 ↦ c∈links⇒e1=e2"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="run∈past  past">
            <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="partition(COM,{Send},{Receive})"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒e1 ↦ e2∈prec∨e2 ↦ e1∈prec">
            <org.eventb.core.prIdent name="PEER" org.eventb.core.type="ℙ(PEER)"/>
            <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧peerOf(e1)≠peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))">
            <org.eventb.core.prIdent name="PEER" org.eventb.core.type="ℙ(PEER)"/>
            <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="prec∈past  past">
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="run;run⊆run">
            <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀ep⦂EVENT·ep∈past∧comOf(ep)=Receive⇒mesOf(ep)≠m"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="cause∈past⇒cause∈dom(comOf)∧comOf∈EVENT ⇸ COM∧(comOf(cause)=Send⇒cause∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE)"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="prec∩prec∼⊆(id ⦂ ℙ(EVENT×EVENT))">
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="eventmapper∈COM × MESSAGE ⤖ EVENT">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀e⦂EVENT·e∈past∧comOf(e)=Receive⇒(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(e)=mesOf(es)∧es ↦ e∈prec)">
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="run∩run∼⊆(id ⦂ ℙ(EVENT×EVENT))">
            <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="prec⊆run">
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
            <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆prec">
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆run">
            <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀e⦂EVENT,c1⦂EVENT,c2⦂EVENT·e ↦ c1∈links∧e ↦ c2∈links⇒c1=c2"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="links∈past ↔ past"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(c1≠c2∨m1≠m2⇔eventmapper(c1 ↦ m1)≠eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="peerOf∈past → PEER">
            <org.eventb.core.prIdent name="PEER" org.eventb.core.type="ℙ(PEER)"/>
            <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒(e1 ↦ e2∈prec⇔e1 ↦ e2∈run)">
            <org.eventb.core.prIdent name="PEER" org.eventb.core.type="ℙ(PEER)"/>
            <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
            <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past⇒e1 ↦ e2∈run∨e2 ↦ e1∈run">
            <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="comOf∈past → COM"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="dom(links)∩ran(links)=(∅ ⦂ ℙ(EVENT))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="cause∈past∧comOf(cause)=Send∧mesOf(cause)=m"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="prec;prec⊆prec">
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="links⊆prec">
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀es⦂EVENT,er⦂EVENT·es ↦ er∈links⇒comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="mesOf∈past → MESSAGE"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="cause∉dom(links)"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧{comOf(e1),comOf(e2)}⊆{Send,Receive}∧comOf(e1)=comOf(e2)∧mesOf(e1)=mesOf(e2)⇒e1=e2"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="past∈ℙ(EVENT)"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="receive/grd4/GRD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4" org.eventb.core.prSets="COM,EVENT,MESSAGE">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p2,p31,p32,p33"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Z3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p3,p1,p4,p2">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1500"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="Z3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="cause" org.eventb.core.type="EVENT"/>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="links" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀es⦂EVENT·es∈past⇒es∈dom(comOf)∧comOf∈EVENT ⇸ COM∧(comOf(es)=Send⇒es∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT,c⦂EVENT·e1 ↦ c∈links∧e2 ↦ c∈links⇒e1=e2"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="run∈past  past">
            <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(COM,{Send},{Receive})"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒e1 ↦ e2∈prec∨e2 ↦ e1∈prec">
            <org.eventb.core.prIdent name="PEER" org.eventb.core.type="ℙ(PEER)"/>
            <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧peerOf(e1)≠peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))">
            <org.eventb.core.prIdent name="PEER" org.eventb.core.type="ℙ(PEER)"/>
            <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="prec∈past  past">
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="run;run⊆run">
            <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀ep⦂EVENT·ep∈past∧comOf(ep)=Receive⇒mesOf(ep)≠m"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="prec∩prec∼⊆(id ⦂ ℙ(EVENT×EVENT))">
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="cause∈past⇒cause∈dom(comOf)∧comOf∈EVENT ⇸ COM∧(comOf(cause)=Send⇒cause∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE)"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="eventmapper∈COM × MESSAGE ⤖ EVENT">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀e⦂EVENT·e∈past∧comOf(e)=Receive⇒(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(e)=mesOf(es)∧es ↦ e∈prec)">
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="run∩run∼⊆(id ⦂ ℙ(EVENT×EVENT))">
            <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="prec⊆run">
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
            <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆prec">
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆run">
            <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀e⦂EVENT,c1⦂EVENT,c2⦂EVENT·e ↦ c1∈links∧e ↦ c2∈links⇒c1=c2"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="links∈past ↔ past"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(c1≠c2∨m1≠m2⇔eventmapper(c1 ↦ m1)≠eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="peerOf∈past → PEER">
            <org.eventb.core.prIdent name="PEER" org.eventb.core.type="ℙ(PEER)"/>
            <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒(e1 ↦ e2∈prec⇔e1 ↦ e2∈run)">
            <org.eventb.core.prIdent name="PEER" org.eventb.core.type="ℙ(PEER)"/>
            <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
            <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="cause∉ran(links)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past⇒e1 ↦ e2∈run∨e2 ↦ e1∈run">
            <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="comOf∈past → COM"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="dom(links)∩ran(links)=(∅ ⦂ ℙ(EVENT))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="cause∈past∧comOf(cause)=Send∧mesOf(cause)=m"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="prec;prec⊆prec">
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="links⊆prec">
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀es⦂EVENT,er⦂EVENT·es ↦ er∈links⇒comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er)"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="mesOf∈past → MESSAGE"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧{comOf(e1),comOf(e2)}⊆{Send,Receive}∧comOf(e1)=comOf(e2)∧mesOf(e1)=mesOf(e2)⇒e1=e2"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="past∈ℙ(EVENT)"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="Glinks/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26" org.eventb.core.prSets="COM,EVENT,MESSAGE,PEER">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p12,p13,p14,p1,p15,p2,p16,p17,p18,p19,p3,p4,p20,p22,p23,p24,p5,p6,p7,p9,p26,p10"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        <org.eventb.core.prIdent name="links" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
        <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT,c⦂EVENT·e1 ↦ c∈links∧e2 ↦ c∈links⇒e1=e2"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="run∈past  past"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀es⦂EVENT,er⦂EVENT·es ↦ er∈links⇒es∈dom(comOf)∧comOf∈EVENT ⇸ COM∧(comOf(es)=Send⇒er∈dom(comOf)∧(comOf(er)=Receive⇒es∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE∧er∈dom(mesOf)))"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(COM,{Send},{Receive})"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒e1 ↦ e2∈prec∨e2 ↦ e1∈prec"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="prec∈past  past"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="run;run⊆run"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="prec∩prec∼⊆(id ⦂ ℙ(EVENT×EVENT))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀e⦂EVENT·e∈past∧comOf(e)=Receive⇒(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(e)=mesOf(es)∧es ↦ e∈prec)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="eventmapper∈COM × MESSAGE ⤖ EVENT"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="run∩run∼⊆(id ⦂ ℙ(EVENT×EVENT))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧comOf(e1)=comOf(e2)∧mesOf(e1)=mesOf(e2)⇒e1=e2"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="prec⊆run"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆prec"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆run"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀e⦂EVENT,c1⦂EVENT,c2⦂EVENT·e ↦ c1∈links∧e ↦ c2∈links⇒c1=c2"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="links∈past ↔ past"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(c1≠c2∨m1≠m2⇔eventmapper(c1 ↦ m1)≠eventmapper(c2 ↦ m2))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="peerOf∈past → PEER"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒(e1 ↦ e2∈prec⇔e1 ↦ e2∈run)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past⇒e1 ↦ e2∈run∨e2 ↦ e1∈run"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="comOf∈past → COM"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="dom(links)∩ran(links)=(∅ ⦂ ℙ(EVENT))"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="prec;prec⊆prec"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="links⊆prec"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="mesOf∈past → MESSAGE"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="past∈ℙ(EVENT)"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="inv3/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27" org.eventb.core.prSets="COM,EVENT,MESSAGE,PEER">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p12,p13,p14,p1,p15,p2,p16,p17,p18,p19,p3,p4,p20,p22,p23,p24,p5,p6,p7,p9,p27,p10"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        <org.eventb.core.prIdent name="links" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
        <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT,c⦂EVENT·e1 ↦ c∈links∧e2 ↦ c∈links⇒e1=e2"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="run∈past  past"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·(e1 ↦ e2∈prec⇒e1∈dom(peerOf)∧peerOf∈EVENT ⇸ PEER∧e2∈dom(peerOf))∧(e1 ↦ e2∈prec∧peerOf(e1)≠peerOf(e2)⇒(∀es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec⇒es∈dom(peerOf)∧(peerOf(e1)=peerOf(es)⇒es∈dom(comOf)∧comOf∈EVENT ⇸ COM∧(comOf(es)=Send⇒er∈dom(comOf)∧(comOf(er)=Receive⇒es∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE∧er∈dom(mesOf))))))"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(COM,{Send},{Receive})"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒e1 ↦ e2∈prec∨e2 ↦ e1∈prec"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="prec∈past  past"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="run;run⊆run"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="prec∩prec∼⊆(id ⦂ ℙ(EVENT×EVENT))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀e⦂EVENT·e∈past∧comOf(e)=Receive⇒(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(e)=mesOf(es)∧es ↦ e∈prec)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="eventmapper∈COM × MESSAGE ⤖ EVENT"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="run∩run∼⊆(id ⦂ ℙ(EVENT×EVENT))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧comOf(e1)=comOf(e2)∧mesOf(e1)=mesOf(e2)⇒e1=e2"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="prec⊆run"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆prec"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆run"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀e⦂EVENT,c1⦂EVENT,c2⦂EVENT·e ↦ c1∈links∧e ↦ c2∈links⇒c1=c2"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="links∈past ↔ past"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(c1≠c2∨m1≠m2⇔eventmapper(c1 ↦ m1)≠eventmapper(c2 ↦ m2))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="peerOf∈past → PEER"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒(e1 ↦ e2∈prec⇔e1 ↦ e2∈run)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past⇒e1 ↦ e2∈run∨e2 ↦ e1∈run"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="comOf∈past → COM"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="dom(links)∩ran(links)=(∅ ⦂ ℙ(EVENT))"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="prec;prec⊆prec"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="links⊆prec"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀es⦂EVENT,er⦂EVENT·es ↦ er∈links⇒comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="mesOf∈past → MESSAGE"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="past∈ℙ(EVENT)"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/Glinks/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="COM,EVENT,MESSAGE">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(COM,{Send},{Receive}))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p6" org.eventb.core.prHyps=""/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="¬Send=Receive"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="COM={Send,Receive}"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(c1≠c2∨m1≠m2⇔eventmapper(c1 ↦ m1)≠eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(COM,{Send},{Receive})"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀es⦂EVENT,er⦂EVENT·es ↦ er∈(∅ ⦂ ℙ(EVENT×EVENT))⇒(∅ ⦂ ℙ(EVENT×COM))(es)=Send∧(∅ ⦂ ℙ(EVENT×COM))(er)=Receive∧(∅ ⦂ ℙ(EVENT×MESSAGE))(es)=(∅ ⦂ ℙ(EVENT×MESSAGE))(er)"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/inv3/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="COM,EVENT,MESSAGE,PEER">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(COM,{Send},{Receive}))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p6">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p6" org.eventb.core.prHyps=""/>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="¬Send=Receive"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="COM={Send,Receive}"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(c1≠c2∨m1≠m2⇔eventmapper(c1 ↦ m1)≠eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈(∅ ⦂ ℙ(EVENT×EVENT))∧(∅ ⦂ ℙ(EVENT×PEER))(e1)≠(∅ ⦂ ℙ(EVENT×PEER))(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈(∅ ⦂ ℙ(EVENT×EVENT))∧es ↦ er∈(∅ ⦂ ℙ(EVENT×EVENT))∧er ↦ e2∈(∅ ⦂ ℙ(EVENT×EVENT))∧(∅ ⦂ ℙ(EVENT×PEER))(e1)=(∅ ⦂ ℙ(EVENT×PEER))(es)∧(∅ ⦂ ℙ(EVENT×COM))(es)=Send∧(∅ ⦂ ℙ(EVENT×COM))(er)=Receive∧(∅ ⦂ ℙ(EVENT×MESSAGE))(es)=(∅ ⦂ ℙ(EVENT×MESSAGE))(er))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(COM,{Send},{Receive})"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="send/Glinks/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="COM,EVENT,MESSAGE">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Z3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1500"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="Z3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
        <org.eventb.core.prIdent name="links" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀es⦂EVENT,er⦂EVENT·es ↦ er∈links⇒(comOf∪{e ↦ Send})(es)=Send∧(comOf∪{e ↦ Send})(er)=Receive∧(mesOf∪{e ↦ m})(es)=(mesOf∪{e ↦ m})(er)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT,c⦂EVENT·e1 ↦ c∈links∧e2 ↦ c∈links⇒e1=e2"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="run∈past  past">
            <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
            <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(COM,{Send},{Receive})"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒e1 ↦ e2∈prec∨e2 ↦ e1∈prec">
            <org.eventb.core.prIdent name="PEER" org.eventb.core.type="ℙ(PEER)"/>
            <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
            <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧peerOf(e1)≠peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))">
            <org.eventb.core.prIdent name="PEER" org.eventb.core.type="ℙ(PEER)"/>
            <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="prec∈past  past">
            <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="run;run⊆run">
            <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="prec∩prec∼⊆(id ⦂ ℙ(EVENT×EVENT))">
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="eventmapper∈COM × MESSAGE ⤖ EVENT">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀e⦂EVENT·e∈past∧comOf(e)=Receive⇒(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(e)=mesOf(es)∧es ↦ e∈prec)">
            <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="run∩run∼⊆(id ⦂ ℙ(EVENT×EVENT))">
            <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="prec⊆run">
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
            <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆prec">
            <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆run">
            <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
            <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀e⦂EVENT,c1⦂EVENT,c2⦂EVENT·e ↦ c1∈links∧e ↦ c2∈links⇒c1=c2"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="links∈past ↔ past">
            <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(c1≠c2∨m1≠m2⇔eventmapper(c1 ↦ m1)≠eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="peerOf∈past → PEER">
            <org.eventb.core.prIdent name="PEER" org.eventb.core.type="ℙ(PEER)"/>
            <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
            <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒(e1 ↦ e2∈prec⇔e1 ↦ e2∈run)">
            <org.eventb.core.prIdent name="PEER" org.eventb.core.type="ℙ(PEER)"/>
            <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
            <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
            <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past⇒e1 ↦ e2∈run∨e2 ↦ e1∈run">
            <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
            <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="comOf∈past → COM">
            <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="dom(links)∩ran(links)=(∅ ⦂ ℙ(EVENT))"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="prec;prec⊆prec">
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="links⊆prec">
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="∀es⦂EVENT,er⦂EVENT·es ↦ er∈links⇒comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="mesOf∈past → MESSAGE">
            <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧{comOf(e1),comOf(e2)}⊆{Send,Receive}∧comOf(e1)=comOf(e2)∧mesOf(e1)=mesOf(e2)⇒e1=e2">
            <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="past∈ℙ(EVENT)">
            <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="send/inv3/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31" org.eventb.core.prSets="COM,EVENT,MESSAGE,PEER">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p2,p3,p4,p5,p7,p8,p9,p10,p11,p12,p13,p14,p16,p17,p18,p19,p20,p21,p22,p24,p25,p26,p27,p28,p29,p30,p31"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
        <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        <org.eventb.core.prIdent name="links" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prIdent name="p" org.eventb.core.type="PEER"/>
        <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
        <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="e∈EVENT ∖ past"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT,c⦂EVENT·e1 ↦ c∈links∧e2 ↦ c∈links⇒e1=e2"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="run∈past  past"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(COM,{Send},{Receive})"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒e1 ↦ e2∈prec∨e2 ↦ e1∈prec"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧peerOf(e1)≠peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="prec∈past  past"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="run;run⊆run"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="prec∩prec∼⊆(id ⦂ ℙ(EVENT×EVENT))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="eventmapper∈COM × MESSAGE ⤖ EVENT"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀e⦂EVENT·e∈past∧comOf(e)=Receive⇒(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(e)=mesOf(es)∧es ↦ e∈prec)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="run∩run∼⊆(id ⦂ ℙ(EVENT×EVENT))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧comOf(e1)=comOf(e2)∧mesOf(e1)=mesOf(e2)⇒e1=e2"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="prec⊆run"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="m∈MESSAGE ∖ ran(mesOf)"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆prec"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆run"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀e⦂EVENT,c1⦂EVENT,c2⦂EVENT·e ↦ c1∈links∧e ↦ c2∈links⇒c1=c2"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="links∈past ↔ past"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(c1≠c2∨m1≠m2⇔eventmapper(c1 ↦ m1)≠eventmapper(c2 ↦ m2))"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="peerOf∈past → PEER"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒(e1 ↦ e2∈prec⇔e1 ↦ e2∈run)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∪{e ↦ e}∪{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∧(peerOf∪{e ↦ p})(e1)≠(peerOf∪{e ↦ p})(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∪{e ↦ e}∪{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∧es ↦ er∈prec∪{e ↦ e}∪{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∧er ↦ e2∈prec∪{e ↦ e}∪{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∧(peerOf∪{e ↦ p})(e1)=(peerOf∪{e ↦ p})(es)∧(comOf∪{e ↦ Send})(es)=Send∧(comOf∪{e ↦ Send})(er)=Receive∧(mesOf∪{e ↦ m})(es)=(mesOf∪{e ↦ m})(er))"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="p∈PEER"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past⇒e1 ↦ e2∈run∨e2 ↦ e1∈run"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="comOf∈past → COM"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="dom(links)∩ran(links)=(∅ ⦂ ℙ(EVENT))"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="prec;prec⊆prec"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="links⊆prec"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="∀es⦂EVENT,er⦂EVENT·es ↦ er∈links⇒comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er)"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="mesOf∈past → MESSAGE"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="past∈ℙ(EVENT)"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="receive/grd4/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="ep" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="COM,EVENT,MESSAGE">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(COM,{Send},{Receive}))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p10">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p11"/>
                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p12"/>
                                <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p13"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p15"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p10" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p16">
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees ep)" org.eventb.core.prGoal="p16" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p17">
                                                        <org.eventb.core.prIdent name="ep" org.eventb.core.type="EVENT"/>
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19" org.eventb.core.prHyps="p18">
                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p19" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p20">
                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p20" org.eventb.core.prHyps="p2">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p18">
                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p18" org.eventb.core.prHyps="p18"/>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                            <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p21">
                                                                        <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="p2"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p22">
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees ep)" org.eventb.core.prGoal="p22" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p23">
                                                        <org.eventb.core.prIdent name="ep" org.eventb.core.type="EVENT"/>
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p23" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p25" org.eventb.core.prHyps="p18,p24">
                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p25" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p26">
                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with comOf(ep)=Receive" org.eventb.core.prHyps="p24">
                                                                            <org.eventb.core.prAnte name="'">
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p27"/>
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p28"/>
                                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p24"/>
                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p26" org.eventb.core.prHyps="p1">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p18">
                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p18" org.eventb.core.prHyps="p18"/>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p29">
                                                                        <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p29" org.eventb.core.prHyps="p1"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="COM={Send,comOf(ep)}">
            <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="ep" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬Send=Receive">
            <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="ep∈past∧comOf(ep)=Receive⇒ep∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE">
            <org.eventb.core.prIdent name="ep" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀ep⦂EVENT·ep∈past⇒ep∈dom(comOf)∧comOf∈EVENT ⇸ COM"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(COM,{Send},{Receive})">
            <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀ep⦂EVENT·ep∈past∧comOf(ep)=Receive⇒ep∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="ep∈past⇒ep∈dom(comOf)∧comOf∈EVENT ⇸ COM">
            <org.eventb.core.prIdent name="ep" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧peerOf(e1)≠peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))">
            <org.eventb.core.prIdent name="PEER" org.eventb.core.type="ℙ(PEER)"/>
            <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="ep∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE">
            <org.eventb.core.prIdent name="ep" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="mesOf∈EVENT ⇸ MESSAGE"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="ep∈dom(mesOf)">
            <org.eventb.core.prIdent name="ep" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="m∈MESSAGE">
            <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="ep∈dom(comOf)∧comOf∈EVENT ⇸ COM">
            <org.eventb.core.prIdent name="ep" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="ep∈dom(comOf)">
            <org.eventb.core.prIdent name="ep" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬Send=comOf(ep)">
            <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="ep" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="COM={Send,Receive}">
            <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(c1≠c2∨m1≠m2⇔eventmapper(c1 ↦ m1)≠eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="p∈PEER">
            <org.eventb.core.prIdent name="PEER" org.eventb.core.type="ℙ(PEER)"/>
            <org.eventb.core.prIdent name="p" org.eventb.core.type="PEER"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="comOf∈EVENT ⇸ COM"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="comOf∈past → COM"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="(∀ep⦂EVENT·ep∈past⇒ep∈dom(comOf)∧comOf∈EVENT ⇸ COM)∧(∀ep⦂EVENT·ep∈past∧comOf(ep)=Receive⇒ep∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="ep∈past">
            <org.eventb.core.prIdent name="ep" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2)">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="mesOf∈past → MESSAGE"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀ep⦂EVENT·(ep∈past⇒ep∈dom(comOf)∧comOf∈EVENT ⇸ COM)∧(ep∈past∧comOf(ep)=Receive⇒ep∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧¬peerOf(e1)=peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))">
            <org.eventb.core.prIdent name="PEER" org.eventb.core.type="ℙ(PEER)"/>
            <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="comOf(ep)=Receive">
            <org.eventb.core.prIdent name="ep" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·⊤∧⊤∧⊤∧⊤⇒(¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="past∈ℙ(EVENT)"/>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="past"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r9" org.eventb.core.prRID="org.eventb.core.seqprover.heL2:1"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="receive/grd5/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="es" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="COM,EVENT,MESSAGE">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(COM,{Send},{Receive}))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7"/>
                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9"/>
                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11"/>
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p12"/>
                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p13"/>
                                <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p14"/>
                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p15"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16"/>
                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees es)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p17">
                                                <org.eventb.core.prIdent name="es" org.eventb.core.type="EVENT"/>
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p17" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19" org.eventb.core.prHyps="p18">
                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p19" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p20">
                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p20" org.eventb.core.prHyps="p2">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p18">
                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p18" org.eventb.core.prHyps="p18"/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p21">
                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="p2"/>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p22">
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p22" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="p23">
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p25">
                                                                                <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="he with comOf(es)=Send" org.eventb.core.prHyps="p23">
                                                                                    <org.eventb.core.prAnte name="'">
                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p26"/>
                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p27"/>
                                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p23"/>
                                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p25" org.eventb.core.prHyps="p1">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p18">
                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p18" org.eventb.core.prHyps="p18"/>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                            <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p28">
                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p28" org.eventb.core.prHyps="p1"/>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="COM={comOf(es),Receive}">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="es" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀es⦂EVENT·es∈past⇒es∈dom(comOf)∧comOf∈EVENT ⇸ COM∧(comOf(es)=Send⇒es∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬Send=Receive">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(COM,{Send},{Receive})">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∀ep⦂EVENT·ep∈past∧comOf(ep)=Receive⇒¬mesOf(ep)=m">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="comOf(es)=Send">
            <org.eventb.core.prIdent name="es" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧peerOf(e1)≠peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))">
            <org.eventb.core.prIdent name="PEER" org.eventb.core.type="ℙ(PEER)"/>
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="es∈dom(comOf)">
            <org.eventb.core.prIdent name="es" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="mesOf∈EVENT ⇸ MESSAGE"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="comOf(es)=Send⇒es∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE">
            <org.eventb.core.prIdent name="es" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀ep⦂EVENT·ep∈past∧comOf(ep)=Receive⇒mesOf(ep)≠m">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="m∈MESSAGE">
            <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="es∈past⇒es∈dom(comOf)∧comOf∈EVENT ⇸ COM∧(comOf(es)=Send⇒es∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE)">
            <org.eventb.core.prIdent name="es" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="es∈dom(comOf)∧comOf∈EVENT ⇸ COM∧(comOf(es)=Send⇒es∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE)">
            <org.eventb.core.prIdent name="es" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="es∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE">
            <org.eventb.core.prIdent name="es" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬comOf(es)=Receive">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="es" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="es∈past">
            <org.eventb.core.prIdent name="es" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="COM={Send,Receive}">
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(c1≠c2∨m1≠m2⇔eventmapper(c1 ↦ m1)≠eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="p∈PEER">
            <org.eventb.core.prIdent name="PEER" org.eventb.core.type="ℙ(PEER)"/>
            <org.eventb.core.prIdent name="p" org.eventb.core.type="PEER"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="comOf∈EVENT ⇸ COM"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="comOf∈past → COM"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2)">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="es∈dom(mesOf)">
            <org.eventb.core.prIdent name="es" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="mesOf∈past → MESSAGE"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧¬peerOf(e1)=peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))">
            <org.eventb.core.prIdent name="PEER" org.eventb.core.type="ℙ(PEER)"/>
            <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
            <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
            <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·⊤∧⊤∧⊤∧⊤⇒(¬c1=c2∨¬m1=m2⇔¬eventmapper(c1 ↦ m1)=eventmapper(c2 ↦ m2))">
            <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="past∈ℙ(EVENT)"/>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="past"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r9" org.eventb.core.prRID="org.eventb.core.seqprover.heL2:1"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="receive/Glinks/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34" org.eventb.core.prSets="COM,EVENT,MESSAGE,PEER">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p2,p3,p4,p5,p6,p7,p8,p9,p11,p12,p13,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p26,p27,p28,p29,p30,p32,p34"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34">
                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1000"/>
                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
        <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        <org.eventb.core.prIdent name="links" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prIdent name="p" org.eventb.core.type="PEER"/>
        <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
        <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="e∈EVENT ∖ past"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀es⦂EVENT·es∈past⇒es∈dom(comOf)∧comOf∈EVENT ⇸ COM∧(comOf(es)=Send⇒es∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT,c⦂EVENT·e1 ↦ c∈links∧e2 ↦ c∈links⇒e1=e2"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="run∈past  past"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="partition(COM,{Send},{Receive})"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒e1 ↦ e2∈prec∨e2 ↦ e1∈prec"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧peerOf(e1)≠peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="prec∈past  past"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="run;run⊆run"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀ep⦂EVENT·ep∈past∧comOf(ep)=Receive⇒mesOf(ep)≠m"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="prec∩prec∼⊆(id ⦂ ℙ(EVENT×EVENT))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="eventmapper∈COM × MESSAGE ⤖ EVENT"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀e⦂EVENT·e∈past∧comOf(e)=Receive⇒(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(e)=mesOf(es)∧es ↦ e∈prec)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="m∈MESSAGE"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="run∩run∼⊆(id ⦂ ℙ(EVENT×EVENT))"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧comOf(e1)=comOf(e2)∧mesOf(e1)=mesOf(e2)⇒e1=e2"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="prec⊆run"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆prec"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆run"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="∀e⦂EVENT,c1⦂EVENT,c2⦂EVENT·e ↦ c1∈links∧e ↦ c2∈links⇒c1=c2"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="links∈past ↔ past"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(c1≠c2∨m1≠m2⇔eventmapper(c1 ↦ m1)≠eventmapper(c2 ↦ m2))"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="peerOf∈past → PEER"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒(e1 ↦ e2∈prec⇔e1 ↦ e2∈run)"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="p∈PEER"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past⇒e1 ↦ e2∈run∨e2 ↦ e1∈run"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="comOf∈past → COM"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="dom(links)∩ran(links)=(∅ ⦂ ℙ(EVENT))"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="prec;prec⊆prec"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="links⊆prec"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∀es⦂EVENT,er⦂EVENT·es ↦ er∈links⇒comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀es⦂EVENT,er⦂EVENT·es ↦ er∈links∪{es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m ∣ es ↦ e}⇒(comOf∪{e ↦ Receive})(es)=Send∧(comOf∪{e ↦ Receive})(er)=Receive∧(mesOf∪{e ↦ m})(es)=(mesOf∪{e ↦ m})(er)"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="mesOf∈past → MESSAGE"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="past∈ℙ(EVENT)"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="receive/inv3/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="e1,e2" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33" org.eventb.core.prSets="COM,EVENT,MESSAGE,PEER" org.eventb.core.psManual="true">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees e1,e2)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p34">
                <org.eventb.core.prIdent name="e1" org.eventb.core.type="EVENT"/>
                <org.eventb.core.prIdent name="e2" org.eventb.core.type="EVENT"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p34" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p37" org.eventb.core.prHyps="p35,p36">
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ∈ in e1 ↦ e2∈prec∪{e ↦ e}∪{ep·ep∈past∧(∃ep2·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∪{ep·ep∈past∧(∃es·es∈past∧comOf(es)=Send∧mesOf(es)=m∧ep ↦ es∈prec) ∣ ep ↦ e}" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p38"/>
                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∨ hyp (e1 ↦ e2∈prec∨e1 ↦ e2∈{e ↦ e}∨e1 ↦ e2∈{ep·ep∈past∧(∃ep2·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∨e1 ↦ e2∈{ep·ep∈past∧(∃es·es∈past∧comOf(es)=Send∧mesOf(es)=m∧ep ↦ es∈prec) ∣ ep ↦ e})" org.eventb.core.prHyps="p38">
                                    <org.eventb.core.prAnte name="'" org.eventb.core.prHyps="p39">
                                        <org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p38"/>
                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p38,p2,p3,p4,p5,p6,p8,p9,p11,p12,p13,p15,p16,p17,p18,p19,p20,p21,p22,p23,p25,p26,p27,p28,p29,p30,p31,p40,p33"/>
                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p37" org.eventb.core.prHyps="p38,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p35,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p39,p28,p29,p30,p31,p32,p33">
                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1500"/>
                                                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prAnte name="(" org.eventb.core.prHyps="p41">
                                        <org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p38"/>
                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p38,p2,p3,p4,p5,p6,p8,p9,p11,p12,p13,p15,p16,p17,p18,p19,p20,p21,p22,p23,p25,p26,p27,p28,p29,p30,p31,p40,p33"/>
                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Z3" org.eventb.core.prHyps="p35,p41">
                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1500"/>
                                                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="Z3"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prAnte name=")" org.eventb.core.prHyps="p42">
                                        <org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p38"/>
                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p38,p2,p3,p4,p5,p6,p8,p9,p11,p12,p13,p15,p16,p17,p18,p19,p20,p21,p22,p23,p25,p26,p27,p28,p29,p30,p31,p40,p33"/>
                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="CVC3" org.eventb.core.prGoal="p37" org.eventb.core.prHyps="p38,p1,p42,p2,p3,p4,p5,p6,p7,p8,p9,p10,p35,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33">
                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1500"/>
                                                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="CVC3"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prAnte name="*" org.eventb.core.prHyps="p43">
                                        <org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p38"/>
                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="sl/ds" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="SELECT0" org.eventb.core.prHyps="p38,p2,p3,p4,p5,p6,p8,p9,p11,p12,p13,p15,p16,p17,p18,p19,p20,p21,p22,p23,p25,p26,p27,p28,p29,p30,p31,p40,p33"/>
                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="veriT" org.eventb.core.prGoal="p37" org.eventb.core.prHyps="p43,p1,p7,p17,p26">
                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="R1500"/>
                                                    <org.eventb.core.prString name=".config_id" org.eventb.core.prSValue="veriT"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Receive" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="Send" org.eventb.core.type="COM"/>
        <org.eventb.core.prIdent name="comOf" org.eventb.core.type="ℙ(EVENT×COM)"/>
        <org.eventb.core.prIdent name="e" org.eventb.core.type="EVENT"/>
        <org.eventb.core.prIdent name="eventmapper" org.eventb.core.type="ℙ(COM×MESSAGE×EVENT)"/>
        <org.eventb.core.prIdent name="links" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="m" org.eventb.core.type="MESSAGE"/>
        <org.eventb.core.prIdent name="mesOf" org.eventb.core.type="ℙ(EVENT×MESSAGE)"/>
        <org.eventb.core.prIdent name="p" org.eventb.core.type="PEER"/>
        <org.eventb.core.prIdent name="past" org.eventb.core.type="ℙ(EVENT)"/>
        <org.eventb.core.prIdent name="peerOf" org.eventb.core.type="ℙ(EVENT×PEER)"/>
        <org.eventb.core.prIdent name="prec" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prIdent name="run" org.eventb.core.type="ℙ(EVENT×EVENT)"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="e1 ↦ e2∈prec∨e1 ↦ e2∈{e ↦ e}∨e1 ↦ e2∈{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∨e1 ↦ e2∈{ep⦂EVENT·ep∈past∧(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m∧ep ↦ es∈prec) ∣ ep ↦ e}">
            <org.eventb.core.prIdent name="e1" org.eventb.core.type="EVENT"/>
            <org.eventb.core.prIdent name="e2" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="e1 ↦ e2∈{ep⦂EVENT·ep∈past∧(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m∧ep ↦ es∈prec) ∣ ep ↦ e}">
            <org.eventb.core.prIdent name="e1" org.eventb.core.type="EVENT"/>
            <org.eventb.core.prIdent name="e2" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="e∈EVENT ∖ past"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="e1 ↦ e2∈{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}">
            <org.eventb.core.prIdent name="e1" org.eventb.core.type="EVENT"/>
            <org.eventb.core.prIdent name="e2" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="∀es⦂EVENT·es∈past⇒es∈dom(comOf)∧comOf∈EVENT ⇸ COM∧(comOf(es)=Send⇒es∈dom(mesOf)∧mesOf∈EVENT ⇸ MESSAGE)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT,c⦂EVENT·e1 ↦ c∈links∧e2 ↦ c∈links⇒e1=e2"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="run∈past  past"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="e1 ↦ e2∈prec∪{e ↦ e}∪{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∪{ep⦂EVENT·ep∈past∧(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m∧ep ↦ es∈prec) ∣ ep ↦ e}∧(peerOf∪{e ↦ p})(e1)≠(peerOf∪{e ↦ p})(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∪{e ↦ e}∪{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∪{ep⦂EVENT·ep∈past∧(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m∧ep ↦ es∈prec) ∣ ep ↦ e}∧es ↦ er∈prec∪{e ↦ e}∪{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∪{ep⦂EVENT·ep∈past∧(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m∧ep ↦ es∈prec) ∣ ep ↦ e}∧er ↦ e2∈prec∪{e ↦ e}∪{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∪{ep⦂EVENT·ep∈past∧(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m∧ep ↦ es∈prec) ∣ ep ↦ e}∧(peerOf∪{e ↦ p})(e1)=(peerOf∪{e ↦ p})(es)∧(comOf∪{e ↦ Receive})(es)=Send∧(comOf∪{e ↦ Receive})(er)=Receive∧(mesOf∪{e ↦ m})(es)=(mesOf∪{e ↦ m})(er))">
            <org.eventb.core.prIdent name="e1" org.eventb.core.type="EVENT"/>
            <org.eventb.core.prIdent name="e2" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="e1 ↦ e2∈prec∪{e ↦ e}∪{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∪{ep⦂EVENT·ep∈past∧(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m∧ep ↦ es∈prec) ∣ ep ↦ e}">
            <org.eventb.core.prIdent name="e1" org.eventb.core.type="EVENT"/>
            <org.eventb.core.prIdent name="e2" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="partition(COM,{Send},{Receive})"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒e1 ↦ e2∈prec∨e2 ↦ e1∈prec"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∧peerOf(e1)≠peerOf(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∧es ↦ er∈prec∧er ↦ e2∈prec∧peerOf(e1)=peerOf(es)∧comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="prec∈past  past"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="run;run⊆run"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∀ep⦂EVENT·ep∈past∧comOf(ep)=Receive⇒mesOf(ep)≠m"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="prec∩prec∼⊆(id ⦂ ℙ(EVENT×EVENT))"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="(peerOf∪{e ↦ p})(e1)≠(peerOf∪{e ↦ p})(e2)">
            <org.eventb.core.prIdent name="e1" org.eventb.core.type="EVENT"/>
            <org.eventb.core.prIdent name="e2" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="eventmapper∈COM × MESSAGE ⤖ EVENT"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∀e⦂EVENT·e∈past∧comOf(e)=Receive⇒(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(e)=mesOf(es)∧es ↦ e∈prec)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="m∈MESSAGE"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="run∩run∼⊆(id ⦂ ℙ(EVENT×EVENT))"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="prec⊆run"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆prec"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="past ◁ (id ⦂ ℙ(EVENT×EVENT))⊆run"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="∀e⦂EVENT,c1⦂EVENT,c2⦂EVENT·e ↦ c1∈links∧e ↦ c2∈links⇒c1=c2"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1 ↦ e2∈prec∪{e ↦ e}∪{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∪{ep⦂EVENT·ep∈past∧(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m∧ep ↦ es∈prec) ∣ ep ↦ e}∧(peerOf∪{e ↦ p})(e1)≠(peerOf∪{e ↦ p})(e2)⇒(∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∪{e ↦ e}∪{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∪{ep⦂EVENT·ep∈past∧(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m∧ep ↦ es∈prec) ∣ ep ↦ e}∧es ↦ er∈prec∪{e ↦ e}∪{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∪{ep⦂EVENT·ep∈past∧(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m∧ep ↦ es∈prec) ∣ ep ↦ e}∧er ↦ e2∈prec∪{e ↦ e}∪{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∪{ep⦂EVENT·ep∈past∧(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m∧ep ↦ es∈prec) ∣ ep ↦ e}∧(peerOf∪{e ↦ p})(e1)=(peerOf∪{e ↦ p})(es)∧(comOf∪{e ↦ Receive})(es)=Send∧(comOf∪{e ↦ Receive})(er)=Receive∧(mesOf∪{e ↦ m})(es)=(mesOf∪{e ↦ m})(er))"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="links∈past ↔ past"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="∀c1⦂COM,c2⦂COM,m1⦂MESSAGE,m2⦂MESSAGE·c1∈COM∧c2∈COM∧m1∈MESSAGE∧m2∈MESSAGE⇒(c1≠c2∨m1≠m2⇔eventmapper(c1 ↦ m1)≠eventmapper(c2 ↦ m2))"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="peerOf∈past → PEER"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧peerOf(e1)=peerOf(e2)⇒(e1 ↦ e2∈prec⇔e1 ↦ e2∈run)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="p∈PEER"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past⇒e1 ↦ e2∈run∨e2 ↦ e1∈run"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="comOf∈past → COM"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="dom(links)∩ran(links)=(∅ ⦂ ℙ(EVENT))"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="e1 ↦ e2∈{e ↦ e}">
            <org.eventb.core.prIdent name="e1" org.eventb.core.type="EVENT"/>
            <org.eventb.core.prIdent name="e2" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="prec;prec⊆prec"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="links⊆prec"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="e1 ↦ e2∈prec">
            <org.eventb.core.prIdent name="e1" org.eventb.core.type="EVENT"/>
            <org.eventb.core.prIdent name="e2" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="∀es⦂EVENT,er⦂EVENT·es ↦ er∈links⇒comOf(es)=Send∧comOf(er)=Receive∧mesOf(es)=mesOf(er)"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="mesOf∈past → MESSAGE"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∃es⦂EVENT,er⦂EVENT·e1 ↦ es∈prec∪{e ↦ e}∪{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∪{ep⦂EVENT·ep∈past∧(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m∧ep ↦ es∈prec) ∣ ep ↦ e}∧es ↦ er∈prec∪{e ↦ e}∪{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∪{ep⦂EVENT·ep∈past∧(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m∧ep ↦ es∈prec) ∣ ep ↦ e}∧er ↦ e2∈prec∪{e ↦ e}∪{ep⦂EVENT·ep∈past∧(∃ep2⦂EVENT·ep2∈past∧peerOf(ep2)=p∧ep ↦ ep2∈prec) ∣ ep ↦ e}∪{ep⦂EVENT·ep∈past∧(∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m∧ep ↦ es∈prec) ∣ ep ↦ e}∧(peerOf∪{e ↦ p})(e1)=(peerOf∪{e ↦ p})(es)∧(comOf∪{e ↦ Receive})(es)=Send∧(comOf∪{e ↦ Receive})(er)=Receive∧(mesOf∪{e ↦ m})(es)=(mesOf∪{e ↦ m})(er)">
            <org.eventb.core.prIdent name="e1" org.eventb.core.type="EVENT"/>
            <org.eventb.core.prIdent name="e2" org.eventb.core.type="EVENT"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∃es⦂EVENT·es∈past∧comOf(es)=Send∧mesOf(es)=m"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀e1⦂EVENT,e2⦂EVENT·e1∈past∧e2∈past∧{comOf(e1),comOf(e2)}⊆{Send,Receive}∧comOf(e1)=comOf(e2)∧mesOf(e1)=mesOf(e2)⇒e1=e2"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="past∈ℙ(EVENT)"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.smt.core.externalSMT"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.mngHyp"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.rmL1"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.disjE"/>
    </org.eventb.core.prProof>
</org.eventb.core.prFile>
